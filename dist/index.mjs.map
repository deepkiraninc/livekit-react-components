{"version":3,"sources":["../src/components/controls/ClearPinButton.tsx","../src/utils.ts","../src/mergeProps.ts","../src/context/chat-context.ts","../src/context/layout-context.ts","../src/context/pin-context.ts","../src/context/participant-context.ts","../src/context/track-context.ts","../src/context/room-context.ts","../src/components/ConnectionState.tsx","../src/hooks/internal/useObservableState.ts","../src/components/controls/ChatToggle.tsx","../src/components/controls/ShareLinkToggle.tsx","../src/components/controls/DisconnectButton.tsx","../src/components/controls/FocusToggle.tsx","../src/assets/icons/ChatIcon.tsx","../src/assets/icons/Chevron.tsx","../src/assets/icons/FocusToggleIcon.tsx","../src/assets/icons/LeaveIcon.tsx","../src/assets/icons/QualityExcellentIcon.tsx","../src/assets/icons/QualityGoodIcon.tsx","../src/assets/icons/QualityPoorIcon.tsx","../src/assets/icons/QualityUnknownIcon.tsx","../src/assets/icons/ScreenShareIcon.tsx","../src/assets/icons/ScreenShareStopIcon.tsx","../src/assets/icons/SpinnerIcon.tsx","../src/assets/icons/UnfocusToggleIcon.tsx","../src/components/controls/MediaDeviceSelect.tsx","../src/components/controls/StartAudio.tsx","../src/components/controls/TrackToggle.tsx","../src/assets/icons/util.tsx","../src/assets/icons/tl/CameraDisabledIcon.tsx","../src/assets/icons/tl/CameraIcon.tsx","../src/assets/icons/tl/MicDisabledIcon.tsx","../src/assets/icons/tl/MicIcon.tsx","../src/components/layout/FocusLayout.tsx","../src/components/participant/ParticipantTile.tsx","../src/components/participant/ConnectionQualityIndicator.tsx","../src/components/participant/ParticipantName.tsx","../src/components/participant/TrackMutedIndicator.tsx","../src/hooks/useAudioPlayback.ts","../src/hooks/internal/useResizeObserver.ts","../src/hooks/internal/useMediaQuery.ts","../src/hooks/useDataChannel.ts","../src/hooks/useGridLayout.ts","../src/hooks/useIsMuted.ts","../src/hooks/useIsSpeaking.ts","../src/hooks/useLocalParticipant.ts","../src/hooks/useLocalParticipantPermissions.ts","../src/hooks/useMediaTrackBySourceOrName.ts","../src/hooks/useMediaTrack.ts","../src/hooks/useMediaTrackByName.ts","../src/hooks/usePagination.ts","../src/hooks/useVisualStableUpdate.ts","../src/hooks/useParticipantPermissions.ts","../src/hooks/useRemoteParticipants.ts","../src/hooks/useParticipants.ts","../src/hooks/useRemoteParticipant.ts","../src/hooks/useSortedParticipants.ts","../src/hooks/useSpeakingParticipants.ts","../src/hooks/useToken.ts","../src/hooks/useTracks.ts","../src/hooks/usePinnedTracks.ts","../src/hooks/useSwipe.ts","../src/components/participant/VideoTrack.tsx","../src/components/participant/AudioTrack.tsx","../src/components/participant/ParticipantNamePlaceholder.tsx","../src/components/layout/GridLayout.tsx","../src/components/TrackLoop.tsx","../src/components/controls/PaginationControl.tsx","../src/components/controls/PaginationIndicator.tsx","../src/components/layout/CarouselLayout.tsx","../src/components/layout/LayoutContextProvider.tsx","../src/components/LiveKitRoom.tsx","../src/components/participant/AudioVisualizer.tsx","../src/components/ParticipantLoop.tsx","../src/components/RoomAudioRenderer.tsx","../src/components/RoomName.tsx","../src/components/Toast.tsx","../src/components/participant/ParticipantAudioTile.tsx","../src/prefabs/Chat.tsx","../src/components/ChatEntry.tsx","../src/prefabs/PreJoin.tsx","../src/prefabs/MediaDeviceMenu.tsx","../src/assets/images/ParticipantPlaceholder.tsx","../src/prefabs/VideoConference.tsx","../src/prefabs/ControlBar.tsx","../src/components/controls/UserToggle.tsx","../src/assets/icons/InviteIcon.tsx","../src/assets/icons/UsersIcon.tsx","../src/prefabs/ShareLink.tsx","../src/prefabs/Users.tsx","../src/components/participant/ParticipantList.tsx","../src/components/ToggleSwitch.tsx","../src/assets/icons/ApproveIcon.tsx","../src/assets/icons/RejectIcon.tsx","../src/prefabs/AudioConference.tsx"],"sourcesContent":["import { setupClearPinButton } from '@livekit/components-core';\nimport * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport { useLayoutContext } from '../../context';\n\n/** @public */\nexport type ClearPinButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n/** @public */\nexport function useClearPinButton(props: ClearPinButtonProps) {\n  const { state, dispatch } = useLayoutContext().pin;\n\n  const buttonProps = React.useMemo(() => {\n    const { className } = setupClearPinButton();\n    const mergedProps = mergeProps(props, {\n      className,\n      disabled: !state?.length,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'clear_pin' });\n      },\n    });\n    return mergedProps;\n  }, [props, dispatch, state]);\n\n  return { buttonProps };\n}\n\n/**\n * The ClearPinButton is a basic html button with the added ability to signal\n * the LiveKitRoom that it should display the grid view again.\n *\n * @remarks\n * This component works only inside a PinContext.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ClearPinButton>Leave room</ClearPinButton>\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ClearPinButton(props: ClearPinButtonProps) {\n  const { buttonProps } = useClearPinButton(props);\n  return <button {...buttonProps}>{props.children}</button>;\n}\n","import * as React from 'react';\nimport { mergeProps as mergePropsReactAria } from './mergeProps';\n\n/** @internal */\nexport function isProp<U extends HTMLElement, T extends React.HTMLAttributes<U>>(\n  prop: T | undefined,\n): prop is T {\n  return prop !== undefined;\n}\n\n/** @internal */\nexport function mergeProps<\n  U extends HTMLElement,\n  T extends Array<React.HTMLAttributes<U> | undefined>,\n>(...props: T) {\n  return mergePropsReactAria(...props.filter(isProp));\n}\n\n/** @internal */\nexport function cloneSingleChild(\n  children: React.ReactNode | React.ReactNode[],\n  props?: Record<string, any>,\n  key?: any,\n) {\n  return React.Children.map(children, (child) => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child) && React.Children.only(children)) {\n      return React.cloneElement(child, { ...props, key });\n    }\n    return child;\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\n\n/**\n * Calls all functions in the order they were chained with the same arguments.\n * @internal\n */\nexport function chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (const callback of callbacks) {\n      if (typeof callback === 'function') {\n        callback(...args);\n      }\n    }\n  };\n}\n\ninterface Props {\n  [key: string]: any;\n}\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? V : never;\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void\n  ? I\n  : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated - different ids\n * will trigger a side-effect and re-render components hooked up with `useId`.\n * For all other props, the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n * @internal\n */\nexport function mergeProps<T extends Props[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  // Start with a base clone of the first argument. This is a lot faster than starting\n  // with an empty object and adding properties as we go.\n  const result: Props = { ...args[0] };\n  for (let i = 1; i < args.length; i++) {\n    const props = args[i];\n    for (const key in props) {\n      const a = result[key];\n      const b = props[key];\n\n      // Chain events\n      if (\n        typeof a === 'function' &&\n        typeof b === 'function' &&\n        // This is a lot faster than a regex.\n        key[0] === 'o' &&\n        key[1] === 'n' &&\n        key.charCodeAt(2) >= /* 'A' */ 65 &&\n        key.charCodeAt(2) <= /* 'Z' */ 90\n      ) {\n        result[key] = chain(a, b);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        (key === 'className' || key === 'UNSAFE_className') &&\n        typeof a === 'string' &&\n        typeof b === 'string'\n      ) {\n        result[key] = clsx(a, b);\n      } else {\n        result[key] = b !== undefined ? b : a;\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n","import type { WidgetState } from '@livekit/components-core';\nimport type * as React from 'react';\n\n/** @internal */\nexport type ChatContextAction =\n  | { msg: 'show_chat' }\n  | { msg: 'show_invite' }\n  | { msg: 'show_users' };\n\n/** @internal */\nexport type ChatContextType = {\n  dispatch?: React.Dispatch<ChatContextAction>;\n  state?: WidgetState;\n};\n\n/** @internal */\nexport function chatReducer(state: WidgetState, action: ChatContextAction): WidgetState {\n  if (action.msg && action.msg !== state.showChat) {\n    if (action.msg === 'show_chat') {\n      return { ...state, showChat: 'show_chat' };\n    } else if (action.msg === 'show_invite') {\n      return { ...state, showChat: 'show_invite' };\n    } else if (action.msg === 'show_users') {\n      return { ...state, showChat: 'show_users' };\n    } else {\n      return { ...state, showChat: null };\n    }\n  } else {\n    return { ...state, showChat: null };\n  }\n}\n","import { PIN_DEFAULT_STATE, WIDGET_DEFAULT_STATE } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { PinContextType } from './pin-context';\nimport type { ChatContextType } from './chat-context';\nimport { chatReducer } from './chat-context';\nimport { pinReducer } from './pin-context';\n\n/** @public */\nexport type LayoutContextType = {\n  pin: PinContextType;\n  widget: ChatContextType;\n};\n\n/** @public */\nexport const LayoutContext = React.createContext<LayoutContextType | undefined>(undefined);\n\n/**\n * Ensures that a layout context is provided via context.\n * If no layout context is provided, an error is thrown.\n * @public\n */\nexport function useLayoutContext(): LayoutContextType {\n  const layoutContext = React.useContext(LayoutContext);\n  if (!layoutContext) {\n    throw Error('Tried to access LayoutContext context outside a LayoutContextProvider provider.');\n  }\n  return layoutContext;\n}\n\n/**\n * Ensures that a layout context is provided, either via context or explicitly as a parameter.\n * If not inside a `LayoutContext` and no layout context is provided, an error is thrown.\n * @public\n */\nexport function useEnsureLayoutContext(layoutContext?: LayoutContextType) {\n  const layout = useMaybeLayoutContext();\n  layoutContext ??= layout;\n  if (!layoutContext) {\n    throw Error('Tried to access LayoutContext context outside a LayoutContextProvider provider.');\n  }\n  return layoutContext;\n}\n\n/** @public */\nexport function useCreateLayoutContext(): LayoutContextType {\n  const [pinState, pinDispatch] = React.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState },\n  };\n}\n\n/** @public */\nexport function useEnsureCreateLayoutContext(layoutContext?: LayoutContextType): LayoutContextType {\n  const [pinState, pinDispatch] = React.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n\n  return (\n    layoutContext ?? {\n      pin: { dispatch: pinDispatch, state: pinState },\n      widget: { dispatch: widgetDispatch, state: widgetState },\n    }\n  );\n}\n\n/**\n * Returns a layout context from the `LayoutContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeLayoutContext(): LayoutContextType | undefined {\n  return React.useContext(LayoutContext);\n}\n","import type { PinState, TrackReference } from '@livekit/components-core';\nimport type * as React from 'react';\n\n/** @internal */\nexport type PinAction =\n  | {\n      msg: 'set_pin';\n      trackReference: TrackReference;\n    }\n  | { msg: 'clear_pin' };\n\n/** @internal */\nexport type PinContextType = {\n  dispatch?: React.Dispatch<PinAction>;\n  state?: PinState;\n};\n\n/** @internal */\nexport function pinReducer(state: PinState, action: PinAction): PinState {\n  if (action.msg === 'set_pin') {\n    return [action.trackReference];\n  } else if (action.msg === 'clear_pin') {\n    return [];\n  } else {\n    return { ...state };\n  }\n}\n","import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useMaybeTrackContext } from './track-context';\n\n/** @public */\nexport const ParticipantContext = React.createContext<Participant | undefined>(undefined);\n\n/**\n * Ensures that a participant is provided via context.\n * If not inside a `ParticipantContext`, an error is thrown.\n * @public\n */\nexport function useParticipantContext() {\n  const participant = React.useContext(ParticipantContext);\n  if (!participant) {\n    throw Error('tried to access participant context outside of participant context provider');\n  }\n  return participant;\n}\n\n/**\n * Returns a participant from the `ParticipantContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeParticipantContext() {\n  return React.useContext(ParticipantContext);\n}\n\n/**\n * Ensures that a participant is provided, either via context or explicitly as a parameter.\n * If not inside a `ParticipantContext` and no participant is provided, an error is thrown.\n * @public\n */\nexport function useEnsureParticipant(participant?: Participant) {\n  const context = useMaybeParticipantContext();\n  const trackContext = useMaybeTrackContext();\n  const p = participant ?? context ?? trackContext?.participant;\n  if (!p) {\n    throw new Error(\n      'No participant provided, make sure you are inside a participant context or pass the participant explicitly',\n    );\n  }\n  return p;\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport const TrackContext = React.createContext<TrackReferenceOrPlaceholder | undefined>(undefined);\n\n/**\n * Ensures that a track reference is provided via context.\n * If not inside a `TrackContext`, an error is thrown.\n * @public\n */\nexport function useTrackContext() {\n  const trackReference = React.useContext(TrackContext);\n  if (!trackReference) {\n    throw Error('tried to access track context outside of track context provider');\n  }\n  return trackReference;\n}\n\n/**\n * Returns a track reference from the `TrackContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeTrackContext() {\n  return React.useContext(TrackContext);\n}\n\n/**\n * Ensures that a track reference is provided, either via context or explicitly as a parameter.\n * If not inside a `TrackContext` and no track reference is provided, an error is thrown.\n * @public\n */\nexport function useEnsureTrackReference(track?: TrackReferenceOrPlaceholder) {\n  const context = useMaybeTrackContext();\n  const trackRef = track ?? context;\n  if (!trackRef) {\n    throw new Error(\n      'No TrackReference provided, make sure you are inside a track context or pass the track reference explicitly',\n    );\n  }\n  return trackRef;\n}\n","import type { Room } from 'livekit-client';\nimport * as React from 'react';\n\n/** @public */\nexport const RoomContext = React.createContext<Room | undefined>(undefined);\n\n/**\n * Ensures that a room is provided via context.\n * If no room is provided, an error is thrown.\n * @public\n */\nexport function useRoomContext() {\n  const ctx = React.useContext(RoomContext);\n  if (!ctx) {\n    throw Error('tried to access room context outside of livekit room component');\n  }\n  return ctx;\n}\n\n/**\n * Returns the room context if it exists, otherwise undefined.\n * @public\n */\nexport function useMaybeRoomContext() {\n  return React.useContext(RoomContext);\n}\n\n/**\n * Ensures that a room is provided, either via context or explicitly as a parameter.\n * If no room is provided, an error is thrown.\n * @public\n */\nexport function useEnsureRoom(room?: Room) {\n  const context = useMaybeRoomContext();\n  const r = room ?? context;\n  if (!r) {\n    throw new Error(\n      'No room provided, make sure you are inside a Room context or pass the room explicitly',\n    );\n  }\n  return r;\n}\n","import { connectionStateObserver } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { useObservableState } from '../hooks/internal/useObservableState';\n\n/** @public */\nexport interface ConnectionStatusProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The room from which the connection status should be displayed.\n   */\n  room?: Room;\n}\n\n/**\n * The `useConnectionState` hook allows you to simply implement your own `ConnectionState` component.\n *\n * @example\n * ```tsx\n * const connectionState = useConnectionState(room);\n * ```\n * @public\n */\nexport function useConnectionState(room?: Room) {\n  // passed room takes precedence, if not supplied get current room context\n  const r = useEnsureRoom(room);\n  const observable = React.useMemo(() => connectionStateObserver(r), [r]);\n  const connectionState = useObservableState(observable, r.state);\n  return connectionState;\n}\n\n/**\n * The ConnectionState component displays the connection status of the room in written form.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ConnectionState />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ConnectionState({ room, ...props }: ConnectionStatusProps) {\n  const connectionState = useConnectionState(room);\n  return <div {...props}>{connectionState}</div>;\n}\n","import * as React from 'react';\nimport type { Observable } from 'rxjs';\n\n/**\n * @internal\n */\nexport function useObservableState<T>(observable: Observable<T> | undefined, startWith: T) {\n  const [state, setState] = React.useState<T>(startWith);\n  React.useEffect(() => {\n    // observable state doesn't run in SSR\n    if (typeof window === 'undefined' || !observable) return;\n    const subscription = observable.subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [observable]);\n  return state;\n}\n","import { setupChatToggle } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useLayoutContext } from '../../context';\nimport { mergeProps } from '../../utils';\n\ninterface UseToggleChatProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\nfunction useToggleChat({ props }: UseToggleChatProps) {\n  const { dispatch } = useLayoutContext().widget;\n  const { className } = React.useMemo(() => setupChatToggle(), []);\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          if (dispatch) dispatch({ msg: 'show_chat' });\n        },\n      }),\n    [props, className, dispatch],\n  );\n\n  return { mergedProps };\n}\n\n/** @public */\nexport type ChatToggleProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n/**\n * The ChatToggle component toggles the visibility of the chat component.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ToggleChat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ChatToggle(props: ChatToggleProps) {\n  const { mergedProps } = useToggleChat({ props });\n\n  return <button {...mergedProps}>{props.children}</button>;\n}\n","import * as React from 'react';\nimport { useLayoutContext } from '../../context';\nimport { mergeProps } from '../../utils';\nimport { setupShareLinkToggle } from '@livekit/components-core';\n\ninterface UseToggleShareLinkProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\nfunction useToggleShareLink({ props }: UseToggleShareLinkProps) {\n  const { dispatch } = useLayoutContext().widget;\n  const { className } = React.useMemo(() => setupShareLinkToggle(), []);\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          if (dispatch) dispatch({ msg: 'show_invite' });\n        },\n      }),\n    [props, className, dispatch],\n  );\n\n  return { mergedProps };\n}\n\n/** @public */\nexport type ShareLinkToggleProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n/**\n * The ShareLinkToggle component toggles the visibility of the chat component.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ToggleShareLink />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ShareLinkToggle(props: ShareLinkToggleProps) {\n  const { mergedProps } = useToggleShareLink({ props });\n\n  return <button {...mergedProps}>{props.children}</button>;\n}\n","import { ConnectionState } from 'livekit-client';\nimport { setupDisconnectButton } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../../context';\nimport { useConnectionState } from '../ConnectionState';\nimport { mergeProps } from '../../utils';\n\n/** @public */\nexport type DisconnectButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  stopTracks?: boolean;\n};\n\n/** @public */\nexport function useDisconnectButton(props: DisconnectButtonProps) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n\n  const buttonProps = React.useMemo(() => {\n    const { className, disconnect } = setupDisconnectButton(room);\n    const mergedProps = mergeProps(props, {\n      className,\n      onClick: () => disconnect(props.stopTracks ?? true),\n      disabled: connectionState === ConnectionState.Disconnected,\n    });\n    return mergedProps;\n  }, [room, props, connectionState]);\n\n  return { buttonProps };\n}\n\n/**\n * The DisconnectButton is a basic html button with the added ability to disconnect from a LiveKit room.\n * Normally, it is used by end-users to leave a video or audio call.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <DisconnectButton>Leave room</DisconnectButton>\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function DisconnectButton(props: DisconnectButtonProps) {\n  const { buttonProps } = useDisconnectButton(props);\n  return <button {...buttonProps}>{props.children}</button>;\n}\n","import { isTrackReferencePinned, setupFocusToggle } from '@livekit/components-core';\nimport type { Participant, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { LayoutContext, useEnsureParticipant, useMaybeLayoutContext } from '../../context';\nimport { FocusToggleIcon, UnfocusToggleIcon } from '../../assets/icons';\nimport { mergeProps } from '../../utils';\n\ninterface useFocusToggleProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n  trackSource: Track.Source;\n  participant?: Participant;\n}\n\nfunction useFocusToggle({ trackSource, participant, props }: useFocusToggleProps) {\n  const p = useEnsureParticipant(participant);\n  const layoutContext = useMaybeLayoutContext();\n  const { className } = React.useMemo(() => setupFocusToggle(), []);\n\n  const inFocus: boolean = React.useMemo(() => {\n    const track = p.getTrack(trackSource);\n    if (layoutContext?.pin.state && track) {\n      return isTrackReferencePinned(\n        { participant: p, source: trackSource, publication: track },\n        layoutContext.pin.state,\n      );\n    } else {\n      return false;\n    }\n  }, [p, trackSource, layoutContext]);\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n          // Call user defined on click callbacks.\n          props.onClick?.(event);\n\n          // Set or clear focus based on current focus state.\n          const track = p.getTrack(trackSource);\n          if (layoutContext?.pin.dispatch && track) {\n            if (inFocus) {\n              layoutContext.pin.dispatch({\n                msg: 'clear_pin',\n              });\n            } else {\n              layoutContext.pin.dispatch({\n                msg: 'set_pin',\n                trackReference: {\n                  participant: p,\n                  publication: track,\n                  source: track.source,\n                },\n              });\n            }\n          }\n        },\n      }),\n    [props, className, p, trackSource, inFocus, layoutContext],\n  );\n\n  return { mergedProps, inFocus };\n}\n/** @public */\nexport interface FocusToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  trackSource: Track.Source;\n  participant?: Participant;\n}\n\n/**\n * The FocusToggle puts the ParticipantTile in focus or removes it from focus.\n *\n * @example\n * ```tsx\n * <ParticipantTile>\n *   <FocusToggle />\n * </ParticipantTile>\n * ```\n * @public\n */\nexport function FocusToggle({ trackSource, participant, ...props }: FocusToggleProps) {\n  const { mergedProps, inFocus } = useFocusToggle({ trackSource, participant, props });\n\n  return (\n    <LayoutContext.Consumer>\n      {(layoutContext) =>\n        layoutContext !== undefined && (\n          <button {...mergedProps}>\n            {props.children ? (\n              props.children\n            ) : inFocus ? (\n              <UnfocusToggleIcon />\n            ) : (\n              <FocusToggleIcon />\n            )}\n          </button>\n        )\n      }\n    </LayoutContext.Consumer>\n  );\n}\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgChatIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={18} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgChatIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgChevron = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentcolor\"\n      fillRule=\"evenodd\"\n      d=\"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgChevron;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgFocusToggleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5}>\n      <path d=\"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\" />\n    </g>\n  </svg>\n);\nexport default SvgFocusToggleIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgLeaveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgLeaveIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgQualityExcellentIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n  </svg>\n);\nexport default SvgQualityExcellentIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgQualityGoodIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <g opacity={0.25}>\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityGoodIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgQualityPoorIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <g opacity={0.25}>\n      <path d=\"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityPoorIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgQualityUnknownIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <g opacity={0.25}>\n      <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" />\n      <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityUnknownIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgScreenShareIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgScreenShareIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgScreenShareStopIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={16} fill=\"none\" {...props}>\n    <g fill=\"currentColor\">\n      <path d=\"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\" />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\"\n        clipRule=\"evenodd\"\n      />\n    </g>\n  </svg>\n);\nexport default SvgScreenShareStopIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgSpinnerIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\"\n      clipRule=\"evenodd\"\n      opacity={0.7}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\"\n      clipRule=\"evenodd\"\n      opacity={0.6}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\"\n      clipRule=\"evenodd\"\n      opacity={0.5}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\"\n      clipRule=\"evenodd\"\n      opacity={0.4}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\"\n      clipRule=\"evenodd\"\n      opacity={0.9}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\"\n      clipRule=\"evenodd\"\n      opacity={0.3}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\"\n      clipRule=\"evenodd\"\n      opacity={0.8}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\"\n      clipRule=\"evenodd\"\n      opacity={0.2}\n    />\n  </svg>\n);\nexport default SvgSpinnerIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgUnfocusToggleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5}>\n      <path d=\"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\" />\n    </g>\n  </svg>\n);\nexport default SvgUnfocusToggleIcon;\n","import * as React from 'react';\nimport { useMaybeRoomContext } from '../../context';\nimport { setupDeviceSelector, createMediaDeviceObserver } from '@livekit/components-core';\nimport { mergeProps } from '../../utils';\nimport type { Room } from 'livekit-client';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\n\n/** @public */\nexport function useMediaDevices({ kind }: { kind: MediaDeviceKind }) {\n  const deviceObserver = React.useMemo(() => createMediaDeviceObserver(kind), [kind]);\n  const devices = useObservableState(deviceObserver, []);\n  return devices;\n}\n\n/** @public */\nexport interface UseMediaDeviceSelectProps {\n  kind: MediaDeviceKind;\n  room?: Room;\n}\n\n/** @public */\nexport function useMediaDeviceSelect({ kind, room }: UseMediaDeviceSelectProps) {\n  const roomContext = useMaybeRoomContext();\n  // List of all devices.\n  const deviceObserver = React.useMemo(() => createMediaDeviceObserver(kind), [kind]);\n  const devices = useObservableState(deviceObserver, []);\n  // Active device management.\n  const [currentDeviceId, setCurrentDeviceId] = React.useState<string>('');\n  const { className, activeDeviceObservable, setActiveMediaDevice } = React.useMemo(\n    () => setupDeviceSelector(kind, room ?? roomContext),\n    [kind, room, roomContext],\n  );\n\n  React.useEffect(() => {\n    const listener = activeDeviceObservable.subscribe((deviceId) => {\n      if (deviceId) setCurrentDeviceId(deviceId);\n    });\n    return () => {\n      listener?.unsubscribe();\n    };\n  }, [activeDeviceObservable]);\n\n  return { devices, className, activeDeviceId: currentDeviceId, setActiveMediaDevice };\n}\n\n/** @public */\nexport interface MediaDeviceSelectProps extends React.HTMLAttributes<HTMLUListElement> {\n  kind: MediaDeviceKind;\n  onActiveDeviceChange?: (deviceId: string) => void;\n  onDeviceListChange?: (devices: MediaDeviceInfo[]) => void;\n  initialSelection?: string;\n}\n\n/**\n * The MediaDeviceSelect list all media devices of one kind.\n * Clicking on one of the listed devices make it the active media device.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceSelect kind='audioinput' />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function MediaDeviceSelect({\n  kind,\n  initialSelection,\n  onActiveDeviceChange,\n  onDeviceListChange,\n  ...props\n}: MediaDeviceSelectProps) {\n  const room = useMaybeRoomContext();\n  const { devices, activeDeviceId, setActiveMediaDevice, className } = useMediaDeviceSelect({\n    kind,\n    room,\n  });\n  React.useEffect(() => {\n    if (initialSelection) {\n      setActiveMediaDevice(initialSelection);\n    }\n  });\n\n  React.useEffect(() => {\n    if (typeof onDeviceListChange === 'function') {\n      onDeviceListChange(devices);\n    }\n  }, [onDeviceListChange, devices]);\n\n  const handleActiveDeviceChange = async (deviceId: string) => {\n    setActiveMediaDevice(deviceId);\n    onActiveDeviceChange?.(deviceId);\n  };\n  // Merge Props\n  const mergedProps = React.useMemo(\n    () => mergeProps(props, { className }, { className: 'lk-list' }),\n    [className, props],\n  );\n\n  return (\n    <ul {...mergedProps}>\n      {devices.map((device) => (\n        <li\n          key={device.deviceId}\n          id={device.deviceId}\n          data-lk-active={device.deviceId === activeDeviceId}\n          aria-selected={device.deviceId === activeDeviceId}\n          role=\"option\"\n        >\n          <button className=\"lk-button\" onClick={() => handleActiveDeviceChange(device.deviceId)}>\n            {device.label}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { setupStartAudio } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom, useRoomContext } from '../../context';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\nimport { mergeProps } from '../../utils';\n\n/** @alpha */\nexport interface UseStartAudioProps {\n  room?: Room;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * In many browsers to start audio playback, the user must perform a user-initiated event such as clicking a button.\n * The `useStatAudio` hook returns an object with a boolean `canPlayAudio` flag\n * that indicates whether audio playback is allowed in the current context,\n * as well as a `startAudio` function that can be called in a button `onClick` callback to start audio playback in the current context.\n *\n * @see Autoplay policy on MDN web docs for more info: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @alpha\n */\nexport function useStartAudio({ room, props }: UseStartAudioProps) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomAudioPlaybackAllowedObservable, handleStartAudioPlayback } = React.useMemo(\n    () => setupStartAudio(),\n    [],\n  );\n  const observable = React.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomAudioPlaybackAllowedObservable],\n  );\n  const { canPlayAudio } = useObservableState(observable, { canPlayAudio: false });\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          handleStartAudioPlayback(roomEnsured);\n        },\n        style: { display: canPlayAudio ? 'none' : 'block' },\n      }),\n    [props, className, canPlayAudio, handleStartAudioPlayback, roomEnsured],\n  );\n\n  return { mergedProps, canPlayAudio };\n}\n\n/** @public */\nexport interface AllowAudioPlaybackProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n}\n\n/**\n * The StartAudio component is only visible when the browser blocks audio playback. This is due to some browser implemented autoplay policies.\n * To start audio playback, the user must perform a user-initiated event such as clicking this button.\n * As soon as audio playback starts, the button hides itself again.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <StartAudio label=\"Click to allow audio playback\" />\n * </LiveKitRoom>\n * ```\n *\n * @see Autoplay policy on MDN web docs: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @public\n */\nexport function StartAudio({ label = 'Allow Audio', ...props }: AllowAudioPlaybackProps) {\n  const room = useRoomContext();\n  const { mergedProps } = useStartAudio({ room, props });\n\n  return <button {...mergedProps}>{label}</button>;\n}\n","import type { CaptureOptionsBySource, ToggleSource } from '@livekit/components-core';\nimport { log, setupManualToggle, setupMediaToggle } from '@livekit/components-core';\nimport * as React from 'react';\nimport { mergeProps } from '../../mergeProps';\nimport { useMaybeRoomContext } from '../../context';\nimport { getSourceIcon } from '../../assets/icons/util';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\n\n/** @public */\nexport type TrackToggleProps<T extends ToggleSource> = Omit<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  'onChange'\n> & {\n  source: T;\n  showIcon?: boolean;\n  initialState?: boolean;\n  onChange?: (enabled: boolean) => void;\n  captureOptions?: CaptureOptionsBySource<T>;\n};\n\n/** @public */\nexport type UseTrackToggleProps<T extends ToggleSource> = Omit<TrackToggleProps<T>, 'showIcon'>;\n\n/** @public */\nexport function useTrackToggle<T extends ToggleSource>({\n  source,\n  onChange,\n  initialState,\n  captureOptions,\n  ...rest\n}: UseTrackToggleProps<T>) {\n  const room = useMaybeRoomContext();\n  const track = room?.localParticipant?.getTrack(source);\n\n  const { toggle, className, pendingObserver, enabledObserver } = React.useMemo(\n    () => (room ? setupMediaToggle<T>(source, room, captureOptions) : setupManualToggle()),\n    [room, source, JSON.stringify(captureOptions)],\n  );\n\n  const pending = useObservableState(pendingObserver, false);\n  const enabled = useObservableState(enabledObserver, initialState ?? !!track?.isEnabled);\n\n  React.useEffect(() => {\n    onChange?.(enabled);\n  }, [enabled, onChange]);\n\n  React.useEffect(() => {\n    if (initialState !== undefined) {\n      log.debug('forcing initial toggle state', source, initialState);\n      toggle(initialState);\n    }\n    // only execute once at the beginning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const newProps = React.useMemo(() => mergeProps(rest, { className }), [rest, className]);\n\n  const clickHandler: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(\n    (evt) => {\n      toggle();\n      rest.onClick?.(evt);\n    },\n    [rest, toggle],\n  );\n\n  return {\n    toggle,\n    enabled,\n    pending,\n    track,\n    buttonProps: {\n      ...newProps,\n      'aria-pressed': enabled,\n      'data-lk-source': source,\n      'data-lk-enabled': enabled,\n      disabled: pending || rest.disabled,\n      onClick: clickHandler,\n    } as React.ButtonHTMLAttributes<HTMLButtonElement>,\n  };\n}\n\n/**\n * With the TrackToggle component it is possible to mute and unmute your camera and microphone.\n * The component uses an html button element under the hood so you can treat it like a button.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <TrackToggle source={Track.Source.Microphone} />\n *   <TrackToggle source={Track.Source.Camera} />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function TrackToggle<T extends ToggleSource>({ showIcon, ...props }: TrackToggleProps<T>) {\n  const { buttonProps, enabled } = useTrackToggle(props);\n  \n  return (\n    <button {...buttonProps}>\n      {(showIcon ?? true) && getSourceIcon(props.source, enabled)}\n      {props.children}\n    </button>\n  );\n}\n","import * as React from 'react';\nimport { ConnectionQuality, Track } from 'livekit-client';\n\nimport {\n  QualityUnknownIcon,\n  QualityExcellentIcon,\n  QualityGoodIcon,\n  QualityPoorIcon,\n  ScreenShareIcon,\n  ScreenShareStopIcon,\n} from './index';\n\nimport { MicIcon, MicDisabledIcon, CameraIcon, CameraDisabledIcon } from './tl';\n\n/**\n * @internal\n */\nexport function getSourceIcon(source: Track.Source, enabled: boolean) {\n  switch (source) {\n    case Track.Source.Microphone:\n      return enabled ? <MicIcon /> : <MicDisabledIcon />;\n    case Track.Source.Camera:\n      return enabled ? <CameraIcon /> : <CameraDisabledIcon />;\n    case Track.Source.ScreenShare:\n      return enabled ? <ScreenShareStopIcon /> : <ScreenShareIcon />;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * @internal\n */\nexport function getConnectionQualityIcon(quality: ConnectionQuality) {\n  switch (quality) {\n    case ConnectionQuality.Excellent:\n      return <QualityExcellentIcon />;\n    case ConnectionQuality.Good:\n      return <QualityGoodIcon />;\n    case ConnectionQuality.Poor:\n      return <QualityPoorIcon />;\n    default:\n      return <QualityUnknownIcon />;\n  }\n}\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgCameraDisabledIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={18}\n    height={18}\n    viewBox=\"0 0 21 21\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M14.6155 6.64973C14.6155 6.64973 14.6409 5.84659 14.6155 5.58451C14.4718 3.85986 13.3474 3.26807 11.1409 3.26807H5.80627C3.13476 3.26807 2.24707 4.15575 2.24707 6.82727V13.9457C2.24707 15.0109 2.56833 16.0846 3.40529 16.7694L3.9379 17.1498\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M14.7084 9.49878V13.9457C14.7084 16.6172 13.8207 17.5049 11.1492 17.5049H6.69385\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M19.1554 5.93958V13.6075C19.1554 15.0194 18.2085 15.5097 17.0588 14.6981L14.7085 13.0495\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M19.172 2.0929L2.26367 19.0012\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\nexport default SvgCameraDisabledIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgCameraIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={18}\n    height={18}\n    viewBox=\"0 0 21 21\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M10.9042 17.5049H5.56116C2.88964 17.5049 2.00195 15.7295 2.00195 13.9457V6.82727C2.00195 4.15575 2.88964 3.26807 5.56116 3.26807H10.9042C13.5757 3.26807 14.4634 4.15575 14.4634 6.82727V13.9457C14.4634 16.6172 13.5673 17.5049 10.9042 17.5049Z\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M16.8136 14.6981L14.4634 13.0495V7.71495L16.8136 6.06638C17.9634 5.26324 18.9103 5.75358 18.9103 7.16543V13.6075C18.9103 15.0193 17.9634 15.5097 16.8136 14.6981Z\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M10.0333 9.54101C10.7336 9.54101 11.3014 8.97325 11.3014 8.27289C11.3014 7.57252 10.7336 7.00476 10.0333 7.00476C9.3329 7.00476 8.76514 7.57252 8.76514 8.27289C8.76514 8.97325 9.3329 9.54101 10.0333 9.54101Z\"\n      stroke=\"white\"\n      stroke-width=\"1.66\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\nexport default SvgCameraIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgMicDisabledIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={18}\n    height={18}\n    viewBox=\"0 0 21 21\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M14.222 5.74004V5.48647C14.222 3.61847 12.709 2.10547 10.841 2.10547C8.97296 2.10547 7.45996 3.61847 7.45996 5.48647V9.71272\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M8.33936 12.4091C8.95639 13.0937 9.85235 13.5163 10.8413 13.5163C12.7093 13.5163 14.2223 12.0033 14.2223 10.1353V9.71271\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M6.42871 14.7419C7.5867 15.8154 9.13351 16.4747 10.8409 16.4747C14.4079 16.4747 17.3071 13.5755 17.3071 10.0085V8.57159\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M4.375 8.57159V10.0085C4.375 10.9045 4.5525 11.7497 4.88215 12.5274\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M17.6624 2.81549L4.02002 16.4663\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M9.99561 2.95068V5.48643\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M10.8408 16.4747V19.0105\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\nexport default SvgMicDisabledIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgMicIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={18}\n    height={18}\n    viewBox=\"0 0 22 21\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M10.9049 13.3448C12.7729 13.3448 14.2859 11.8318 14.2859 9.96384V5.31496C14.2859 3.44696 12.7729 1.93396 10.9049 1.93396C9.03692 1.93396 7.52393 3.44696 7.52393 5.31496V9.96384C7.52393 11.8318 9.03692 13.3448 10.9049 13.3448Z\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M4.43896 8.40009V9.83701C4.43896 13.404 7.33817 16.3032 10.9051 16.3032C14.4721 16.3032 17.3713 13.404 17.3713 9.83701V8.40009\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M9.73047 5.67844C10.4912 5.39951 11.3195 5.39951 12.0803 5.67844\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M10.229 7.47034C10.677 7.35201 11.1419 7.35201 11.5899 7.47034\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M10.9048 16.3032V18.839\"\n      stroke=\"white\"\n      stroke-width=\"1.66129\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\nexport default SvgMicIcon;\n","import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport type { TrackReference, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { ParticipantTile } from '../participant/ParticipantTile';\nimport type { ParticipantClickEvent } from '@livekit/components-core';\n\n/** @public */\nexport interface FocusLayoutContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  focusTrack?: TrackReference;\n  participants?: Array<Participant>;\n}\n\n/** @public */\nexport function FocusLayoutContainer(props: FocusLayoutContainerProps) {\n  const elementProps = mergeProps(props, { className: 'lk-focus-layout' });\n\n  return <div {...elementProps}>{props.children}</div>;\n}\n\n/** @public */\nexport interface FocusLayoutProps extends React.HTMLAttributes<HTMLElement> {\n  track?: TrackReferenceOrPlaceholder;\n  onParticipantClick?: (evt: ParticipantClickEvent) => void;\n}\n\n/** @public */\nexport function FocusLayout({ track, ...htmlProps }: FocusLayoutProps) {\n  return <ParticipantTile {...track} {...htmlProps} />;\n}\n","import * as React from 'react';\nimport type { Participant, TrackPublication } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport type { ParticipantClickEvent, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { isParticipantSourcePinned, setupParticipantTile } from '@livekit/components-core';\nimport { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\nimport {\n  useMaybeParticipantContext,\n  ParticipantContext,\n  useEnsureParticipant,\n  useMaybeLayoutContext,\n  useMaybeTrackContext,\n} from '../../context';\nimport { useIsMuted, useIsSpeaking } from '../../hooks';\nimport { mergeProps } from '../../utils';\nimport { FocusToggle } from '../controls/FocusToggle';\nimport { ScreenShareIcon } from '../../assets/icons';\nimport { VideoTrack } from './VideoTrack';\nimport { AudioTrack } from './AudioTrack';\nimport { ParticipantNamePlaceholder } from './ParticipantNamePlaceholder';\n\n/** @public */\nexport type ParticipantTileProps = React.HTMLAttributes<HTMLDivElement> & {\n  disableSpeakingIndicator?: boolean;\n  participant?: Participant;\n  source?: Track.Source;\n  publication?: TrackPublication;\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n};\n\n/** @public */\nexport type UseParticipantTileProps<T extends HTMLElement> = TrackReferenceOrPlaceholder & {\n  disableSpeakingIndicator?: boolean;\n  publication?: TrackPublication;\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n  htmlProps: React.HTMLAttributes<T>;\n};\n\n/** @public */\nexport function useParticipantTile<T extends HTMLElement>({\n  participant,\n  source,\n  publication,\n  onParticipantClick,\n  disableSpeakingIndicator,\n  htmlProps,\n}: UseParticipantTileProps<T>) {\n  const p = useEnsureParticipant(participant);\n  const mergedProps = React.useMemo(() => {\n    const { className } = setupParticipantTile();\n    return mergeProps(htmlProps, {\n      className,\n      onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        // @ts-ignore\n        htmlProps.onClick?.(event);\n        if (typeof onParticipantClick === 'function') {\n          const track = publication ?? p.getTrack(source);\n          onParticipantClick({ participant: p, track });\n        }\n      },\n    });\n  }, [htmlProps, source, onParticipantClick, p, publication]);\n  const isVideoMuted = useIsMuted(Track.Source.Camera, { participant });\n  const isAudioMuted = useIsMuted(Track.Source.Microphone, { participant });\n  const isSpeaking = useIsSpeaking(participant);\n  return {\n    elementProps: {\n      'data-lk-audio-muted': isAudioMuted,\n      'data-lk-video-muted': isVideoMuted,\n      'data-lk-speaking': disableSpeakingIndicator === true ? false : isSpeaking,\n      'data-lk-local-participant': participant.isLocal,\n      'data-lk-source': source,\n      ...mergedProps,\n    } as React.HTMLAttributes<HTMLDivElement>,\n  };\n}\n\n/** @public */\nexport function ParticipantContextIfNeeded(\n  props: React.PropsWithChildren<{\n    participant?: Participant;\n  }>,\n) {\n  const hasContext = !!useMaybeParticipantContext();\n  return props.participant && !hasContext ? (\n    <ParticipantContext.Provider value={props.participant}>\n      {props.children}\n    </ParticipantContext.Provider>\n  ) : (\n    <>{props.children}</>\n  );\n}\n\n/**\n * The ParticipantTile component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TrackLoop` component or by spreading a track reference as properties.\n *\n * @example\n * ```tsx\n * <ParticipantTile source={Track.Source.Camera} />\n *\n * <ParticipantTile {...trackReference} />\n * ```\n * @public\n */\nexport const ParticipantTile = ({\n  participant,\n  children,\n  source = Track.Source.Camera,\n  onParticipantClick,\n  publication,\n  disableSpeakingIndicator,\n  ...htmlProps\n}: ParticipantTileProps) => {\n  const p = useEnsureParticipant(participant);\n  const trackRef: TrackReferenceOrPlaceholder = useMaybeTrackContext() ?? {\n    participant: p,\n    source,\n    publication,\n  };\n\n  const { elementProps } = useParticipantTile<HTMLDivElement>({\n    participant: trackRef.participant,\n    htmlProps,\n    source: trackRef.source,\n    publication: trackRef.publication,\n    disableSpeakingIndicator,\n    onParticipantClick,\n  });\n\n  const layoutContext = useMaybeLayoutContext();\n\n  const handleSubscribe = React.useCallback(\n    (subscribed: boolean) => {\n      if (\n        trackRef.source &&\n        !subscribed &&\n        layoutContext &&\n        layoutContext.pin.dispatch &&\n        isParticipantSourcePinned(trackRef.participant, trackRef.source, layoutContext.pin.state)\n      ) {\n        layoutContext.pin.dispatch({ msg: 'clear_pin' });\n      }\n    },\n    [trackRef.participant, layoutContext, trackRef.source],\n  );\n\n  return (\n    <div style={{ position: 'relative' }} {...elementProps}>\n      <ParticipantContextIfNeeded participant={trackRef.participant}>\n        {children ?? (\n          <>\n            {trackRef.publication?.kind === 'video' ||\n            trackRef.source === Track.Source.Camera ||\n            trackRef.source === Track.Source.ScreenShare ? (\n              <VideoTrack\n                participant={trackRef.participant}\n                source={trackRef.source}\n                publication={trackRef.publication}\n                onSubscriptionStatusChanged={handleSubscribe}\n              />\n            ) : (\n              <AudioTrack\n                participant={trackRef.participant}\n                source={trackRef.source}\n                publication={trackRef.publication}\n                onSubscriptionStatusChanged={handleSubscribe}\n              />\n            )}\n            <div className=\"lk-participant-placeholder\">\n              {p && <ParticipantNamePlaceholder name={p.name} />}\n            </div>\n            <div className=\"lk-participant-metadata\">\n              <div className=\"lk-participant-metadata-item\">\n                {trackRef.source === Track.Source.Camera ? (\n                  <>\n                    <TrackMutedIndicator\n                      source={Track.Source.Microphone}\n                      show={'always'}\n                    ></TrackMutedIndicator>\n                    <ParticipantName />\n                  </>\n                ) : (\n                  <>\n                    <ScreenShareIcon style={{ marginRight: '0.25rem' }} />\n                    <ParticipantName>&apos;s screen</ParticipantName>\n                  </>\n                )}\n              </div>\n              <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" />\n            </div>\n          </>\n        )}\n        <FocusToggle trackSource={trackRef.source} />\n      </ParticipantContextIfNeeded>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { setupConnectionQualityIndicator } from '@livekit/components-core';\nimport { useEnsureParticipant } from '../../context';\nimport type { Participant } from 'livekit-client';\nimport { ConnectionQuality } from 'livekit-client';\nimport { mergeProps } from '../../utils';\nimport { getConnectionQualityIcon } from '../../assets/icons/util';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\n\n/** @public */\nexport interface ConnectionQualityIndicatorOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport type ConnectionQualityIndicatorProps = React.HTMLAttributes<HTMLDivElement> &\n  ConnectionQualityIndicatorOptions;\n\n/** @public */\nexport function useConnectionQualityIndicator(options: ConnectionQualityIndicatorOptions = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const { className, connectionQualityObserver } = React.useMemo(\n    () => setupConnectionQualityIndicator(p),\n    [p],\n  );\n\n  const quality = useObservableState(connectionQualityObserver, ConnectionQuality.Unknown);\n\n  return { className, quality };\n}\n\n/**\n * The ConnectionQualityIndicator shows the individual connection quality of a participant.\n *\n * @example\n * ```tsx\n * <ConnectionQualityIndicator />\n * ```\n * @public\n */\nexport function ConnectionQualityIndicator(props: ConnectionQualityIndicatorProps) {\n  const { className, quality } = useConnectionQualityIndicator(props);\n  const elementProps = React.useMemo(() => {\n    return { ...mergeProps(props, { className: className as string }), 'data-lk-quality': quality };\n  }, [quality, props, className]);\n  return <div {...elementProps}>{props.children ?? getConnectionQualityIcon(quality)}</div>;\n}\n","import { participantInfoObserver, setupParticipantName } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../../context';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\nimport { mergeProps } from '../../utils';\n\n/** @public */\nexport function useParticipantInfo(props: UseParticipantInfoOptions = {}) {\n  const p = useEnsureParticipant(props.participant);\n  const infoObserver = React.useMemo(() => participantInfoObserver(p), [p]);\n  const { identity, name, metadata } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata,\n  });\n\n  return { identity, name, metadata };\n}\n\n/** @public */\nexport type UseParticipantInfoOptions = {\n  participant?: Participant;\n};\n\n/** @public */\nexport type ParticipantNameProps = React.HTMLAttributes<HTMLSpanElement> &\n  UseParticipantInfoOptions;\n\n/**\n * The ParticipantName component displays the name of the participant as a string within an HTML span element.\n * If no participant name is undefined the participant identity string is displayed.\n *\n * @example\n * ```tsx\n * <ParticipantName />\n * ```\n * @public\n */\nexport function ParticipantName({ participant, ...props }: ParticipantNameProps) {\n  const p = useEnsureParticipant(participant);\n\n  const { className, infoObserver } = React.useMemo(() => {\n    return setupParticipantName(p);\n  }, [p]);\n\n  const { identity, name } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata,\n  });\n\n  const mergedProps = React.useMemo(() => {\n    return mergeProps(props, { className, 'data-lk-participant-name': name });\n  }, [props, className, name]);\n\n  return (\n    <span {...mergedProps}>\n      {name !== '' ? name : identity}\n      {props.children}\n    </span>\n  );\n}\n","import * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport { setupTrackMutedIndicator } from '@livekit/components-core';\nimport type { Participant, Track } from 'livekit-client';\nimport { useEnsureParticipant } from '../../context';\nimport { getSourceIcon } from '../../assets/icons/util';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\n\n/** @public */\nexport interface TrackMutedIndicatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  source: Track.Source;\n  participant?: Participant;\n  show?: 'always' | 'muted' | 'unmuted';\n}\n\n/** @public */\nexport interface UseTrackMutedIndicatorOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport const useTrackMutedIndicator = (\n  source: Track.Source,\n  options: UseTrackMutedIndicatorOptions = {},\n) => {\n  const p = useEnsureParticipant(options.participant);\n  const { className, mediaMutedObserver } = React.useMemo(\n    () => setupTrackMutedIndicator(p, source),\n    [p, source],\n  );\n\n  const isMuted = useObservableState(mediaMutedObserver, !!p.getTrack(source)?.isMuted);\n\n  return { isMuted, className };\n};\n\n/**\n * The TrackMutedIndicator shows whether the participant's camera or microphone is muted or not.\n *\n * @example\n * ```tsx\n * <TrackMutedIndicator source={Track.Source.Camera} />\n * <TrackMutedIndicator source={Track.Source.Microphone} />\n * ```\n * @public\n */\nexport const TrackMutedIndicator = ({\n  source,\n  participant,\n  show = 'always',\n  ...props\n}: TrackMutedIndicatorProps) => {\n  const { className, isMuted } = useTrackMutedIndicator(source, { participant });\n\n  const showIndicator =\n    show === 'always' || (show === 'muted' && isMuted) || (show === 'unmuted' && !isMuted);\n\n  const htmlProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n      }),\n    [className, props],\n  );\n\n  if (!showIndicator) {\n    return null;\n  }\n\n  return (\n    <div {...htmlProps} data-lk-muted={isMuted}>\n      {props.children ?? getSourceIcon(source, !isMuted)}\n    </div>\n  );\n};\n","import type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useObservableState } from './internal';\nimport { roomAudioPlaybackAllowedObservable } from '@livekit/components-core';\nimport { useEnsureRoom } from '../context';\n\n/**\n * In many browsers to start audio playback, the user must perform a user-initiated event such as clicking a button.\n * The `useAudioPlayback` hook returns an object with a boolean `canPlayAudio` flag that indicates whether audio\n * playback is allowed in the current context, as well as a `startAudio` function that can be called in a button\n * `onClick` callback to start audio playback in the current context.\n *\n * @see Autoplay policy on MDN web docs for more info: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @alpha\n */\nexport function useAudioPlayback(room?: Room): {\n  canPlayAudio: boolean;\n  startAudio: () => Promise<void>;\n} {\n  const roomEnsured = useEnsureRoom(room);\n  const startAudio = React.useCallback(async () => {\n    await roomEnsured.startAudio();\n  }, [roomEnsured]);\n\n  const observable = React.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured],\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio,\n  });\n\n  return { canPlayAudio, startAudio };\n}\n","/* eslint-disable no-return-assign */\n/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport useLatest from '@react-hook/latest';\n\n/**\n * A React hook that fires a callback whenever ResizeObserver detects a change to its size\n * code extracted from https://github.com/jaredLunde/react-hook/blob/master/packages/resize-observer/src/index.tsx in order to not include the polyfill for resize-observer\n *\n * @internal\n */\nexport function useResizeObserver<T extends HTMLElement>(\n  target: React.RefObject<T>,\n  callback: UseResizeObserverCallback,\n) {\n  const resizeObserver = getResizeObserver();\n  const storedCallback = useLatest(callback);\n\n  React.useLayoutEffect(() => {\n    let didUnsubscribe = false;\n\n    const targetEl = target.current;\n    if (!targetEl) return;\n\n    function cb(entry: ResizeObserverEntry, observer: ResizeObserver) {\n      if (didUnsubscribe) return;\n      storedCallback.current(entry, observer);\n    }\n\n    resizeObserver?.subscribe(targetEl as HTMLElement, cb);\n\n    return () => {\n      didUnsubscribe = true;\n      resizeObserver?.unsubscribe(targetEl as HTMLElement, cb);\n    };\n  }, [target.current, resizeObserver, storedCallback]);\n\n  return resizeObserver?.observer;\n}\n\nfunction createResizeObserver() {\n  let ticking = false;\n  let allEntries: ResizeObserverEntry[] = [];\n\n  const callbacks: Map<unknown, Array<UseResizeObserverCallback>> = new Map();\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const observer = new ResizeObserver((entries: ResizeObserverEntry[], obs: ResizeObserver) => {\n    allEntries = allEntries.concat(entries);\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const triggered = new Set<Element>();\n        for (let i = 0; i < allEntries.length; i++) {\n          if (triggered.has(allEntries[i].target)) continue;\n          triggered.add(allEntries[i].target);\n          const cbs = callbacks.get(allEntries[i].target);\n          cbs?.forEach((cb) => cb(allEntries[i], obs));\n        }\n        allEntries = [];\n        ticking = false;\n      });\n    }\n    ticking = true;\n  });\n\n  return {\n    observer,\n    subscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      observer.observe(target);\n      const cbs = callbacks.get(target) ?? [];\n      cbs.push(callback);\n      callbacks.set(target, cbs);\n    },\n    unsubscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      const cbs = callbacks.get(target) ?? [];\n      if (cbs.length === 1) {\n        observer.unobserve(target);\n        callbacks.delete(target);\n        return;\n      }\n      const cbIndex = cbs.indexOf(callback);\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1);\n      callbacks.set(target, cbs);\n    },\n  };\n}\n\nlet _resizeObserver: ReturnType<typeof createResizeObserver>;\n\nconst getResizeObserver = () =>\n  !_resizeObserver ? (_resizeObserver = createResizeObserver()) : _resizeObserver;\n\nexport type UseResizeObserverCallback = (\n  entry: ResizeObserverEntry,\n  observer: ResizeObserver,\n) => unknown;\n\nexport const useSize = (target: React.RefObject<HTMLDivElement>) => {\n  const [size, setSize] = React.useState({ width: 0, height: 0 });\n  React.useLayoutEffect(() => {\n    if (target.current) {\n      const { width, height } = target.current.getBoundingClientRect();\n      setSize({ width, height });\n    }\n  }, [target.current]);\n\n  const resizeCallback = React.useCallback(\n    (entry: ResizeObserverEntry) => setSize(entry.contentRect),\n    [],\n  );\n  // Where the magic happens\n  useResizeObserver(target, resizeCallback);\n  return size;\n};\n","import * as React from 'react';\n/**\n * Implementation used from https://github.com/juliencrn/usehooks-ts\n *\n * @internal\n */\nexport function useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return false;\n  };\n\n  const [matches, setMatches] = React.useState<boolean>(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  React.useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n\n    // Triggered at the first client-side load and if query changes\n    handleChange();\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return matches;\n}\n","import type { ReceivedDataMessage } from '@livekit/components-core';\nimport { setupDataMessageHandler } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport function useDataChannel<T extends string>(\n  topic?: T,\n  onMessage?: (msg: ReceivedDataMessage<T>) => void,\n) {\n  const room = useRoomContext();\n  const { send, messageObservable, isSendingObservable } = React.useMemo(\n    () => setupDataMessageHandler(room, topic, onMessage),\n    [room, topic, onMessage],\n  );\n\n  const message = useObservableState(messageObservable, undefined);\n  const isSending = useObservableState(isSendingObservable, false);\n\n  return {\n    message,\n    send,\n    isSending,\n  };\n}\n","import { GRID_LAYOUTS, selectGridLayout } from '@livekit/components-core';\nimport type { GridLayout } from '@livekit/components-core/dist/helper/grid-layouts';\nimport * as React from 'react';\nimport { useSize } from './internal';\n\n/**\n * The useGridLayout hook tries to select the best layout to fit all tiles.\n * If the available screen space is not enough, it will reduce the number of maximum visible\n * tiles and select a layout that still works visually within the given limitations.\n * As the order of tiles changes over time, the hook tries to keep visual updates to a minimum\n * while trying to display important tiles such as speaking participants or screen shares.\n * @public\n */\nexport function useGridLayout(\n  /** HTML element that contains the grid. */\n  gridElement: React.RefObject<HTMLDivElement>,\n  /** Count of tracks that should get layed out */\n  trackCount: number,\n): { layout: GridLayout } {\n  const { width, height } = useSize(gridElement);\n\n  const layout =\n    width > 0 && height > 0\n      ? selectGridLayout(GRID_LAYOUTS, trackCount, width, height)\n      : GRID_LAYOUTS[0];\n\n  React.useEffect(() => {\n    if (gridElement.current && layout) {\n      gridElement.current.style.setProperty('--lk-col-count', layout?.columns.toString());\n      gridElement.current.style.setProperty('--lk-row-count', layout?.rows.toString());\n    }\n  }, [gridElement, layout]);\n\n  return {\n    layout,\n  };\n}\n","import { mutedObserver } from '@livekit/components-core';\nimport type { Participant, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\n\n/** @public */\nexport interface UseIsMutedOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport function useIsMuted(source: Track.Source, options: UseIsMutedOptions = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const [isMuted, setIsMuted] = React.useState(!!p.getTrack(source)?.isMuted);\n\n  React.useEffect(() => {\n    const listener = mutedObserver(p, source).subscribe(setIsMuted);\n    return () => listener.unsubscribe();\n  }, [p, source]);\n\n  return isMuted;\n}\n","import { createIsSpeakingObserver } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport function useIsSpeaking(participant?: Participant) {\n  const p = useEnsureParticipant(participant);\n  const observable = React.useMemo(() => createIsSpeakingObserver(p), [p]);\n  const isSpeaking = useObservableState(observable, p.isSpeaking);\n\n  return isSpeaking;\n}\n","import type { ParticipantMedia } from '@livekit/components-core';\nimport { observeParticipantMedia } from '@livekit/components-core';\nimport type { TrackPublication, LocalParticipant, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport interface UseLocalParticipantOptions {\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The useLocalParticipant hook the state of the local participant.\n * @public\n */\nexport const useLocalParticipant = (options: UseLocalParticipantOptions = {}) => {\n  const room = useEnsureRoom(options.room);\n  const [localParticipant, setLocalParticipant] = React.useState(room.localParticipant);\n  const [isMicrophoneEnabled, setIsMicrophoneEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [isCameraEnabled, setIsCameraEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [microphoneTrack, setMicrophoneTrack] = React.useState<TrackPublication | undefined>(\n    undefined,\n  );\n  const [cameraTrack, setCameraTrack] = React.useState<TrackPublication | undefined>(undefined);\n\n  const handleUpdate = (media: ParticipantMedia<LocalParticipant>) => {\n    setIsCameraEnabled(media.isCameraEnabled);\n    setIsMicrophoneEnabled(media.isMicrophoneEnabled);\n    setIsScreenShareEnabled(media.isScreenShareEnabled);\n    setCameraTrack(media.cameraTrack);\n    setMicrophoneTrack(media.microphoneTrack);\n    setLocalParticipant(media.participant);\n  };\n  React.useEffect(() => {\n    const listener = observeParticipantMedia(localParticipant).subscribe(handleUpdate);\n    // TODO also listen to permission and metadata etc. events\n    return () => listener.unsubscribe();\n  }, [localParticipant]);\n\n  return {\n    isMicrophoneEnabled,\n    isScreenShareEnabled,\n    isCameraEnabled,\n    microphoneTrack,\n    cameraTrack,\n    localParticipant,\n  };\n};\n","import { participantPermissionObserver } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport function useLocalParticipantPermissions() {\n  const room = useRoomContext();\n  const permissionObserver = React.useMemo(\n    () => participantPermissionObserver(room.localParticipant),\n    [room],\n  );\n  const permissions = useObservableState(permissionObserver, room.localParticipant.permissions);\n  return permissions;\n}\n","import type { TrackIdentifier } from '@livekit/components-core';\nimport { isTrackReference } from '@livekit/components-core';\nimport { setupMediaTrack, log, isLocal, getTrackByIdentifier } from '@livekit/components-core';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { mergeProps } from '../utils';\nimport type { UseMediaTrackOptions } from './useMediaTrack';\n\n/**\n * @internal\n */\nexport function useMediaTrackBySourceOrName(\n  observerOptions: TrackIdentifier,\n  options: UseMediaTrackOptions = {},\n) {\n  const [publication, setPublication] = React.useState(getTrackByIdentifier(observerOptions));\n\n  const [isMuted, setMuted] = React.useState(publication?.isMuted);\n  const [isSubscribed, setSubscribed] = React.useState(publication?.isSubscribed);\n  const [track, setTrack] = React.useState(publication?.track);\n  const [orientation, setOrientation] = React.useState<'landscape' | 'portrait'>('landscape');\n  const previousElement = React.useRef<HTMLMediaElement | undefined | null>();\n\n  const { className, trackObserver } = React.useMemo(() => {\n    return setupMediaTrack(observerOptions);\n  }, [\n    observerOptions.participant.identity,\n    observerOptions.source,\n    isTrackReference(observerOptions) && observerOptions.publication.trackSid,\n  ]);\n\n  React.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication) => {\n      log.debug('update track', publication);\n      setPublication(publication);\n      setMuted(publication?.isMuted);\n      setSubscribed(publication?.isSubscribed);\n      setTrack(publication?.track);\n    });\n    return () => subscription?.unsubscribe();\n  }, [trackObserver]);\n\n  React.useEffect(() => {\n    if (track) {\n      if (previousElement.current) {\n        track.detach(previousElement.current);\n      }\n      if (\n        options.element?.current &&\n        !(isLocal(observerOptions.participant) && track?.kind === 'audio')\n      ) {\n        track.attach(options.element.current);\n      }\n    }\n    previousElement.current = options.element?.current;\n    return () => {\n      if (previousElement.current) {\n        track?.detach(previousElement.current);\n      }\n    };\n  }, [track, options.element]);\n\n  React.useEffect(() => {\n    // Set the orientation of the video track.\n    // TODO: This does not handle changes in orientation after a track got published (e.g when rotating a phone camera from portrait to landscape).\n    if (\n      typeof publication?.dimensions?.width === 'number' &&\n      typeof publication?.dimensions?.height === 'number'\n    ) {\n      const orientation_ =\n        publication.dimensions.width > publication.dimensions.height ? 'landscape' : 'portrait';\n      setOrientation(orientation_);\n    }\n  }, [publication]);\n\n  return {\n    publication,\n    isMuted,\n    isSubscribed,\n    track,\n    elementProps: mergeProps(options.props, {\n      className,\n      'data-lk-local-participant': observerOptions.participant.isLocal,\n      'data-lk-source': publication?.source,\n      ...(publication?.source === Track.Source.Camera ||\n      publication?.source === Track.Source.ScreenShare\n        ? { 'data-lk-orientation': orientation }\n        : {}),\n    }),\n  };\n}\n","import type { VideoSource, AudioSource } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport { useEnsureParticipant } from '../context/participant-context';\nimport { useMediaTrackBySourceOrName } from './useMediaTrackBySourceOrName';\n\n/** @public */\nexport interface UseMediaTrackOptions {\n  element?: React.RefObject<HTMLMediaElement>;\n  props?: React.HTMLAttributes<HTMLVideoElement | HTMLAudioElement>;\n}\n\n/** @public */\nexport function useMediaTrack(\n  source: VideoSource | AudioSource,\n  participant?: Participant,\n  options: UseMediaTrackOptions = {},\n) {\n  const p = useEnsureParticipant(participant);\n  return useMediaTrackBySourceOrName({ source, participant: p }, options);\n}\n","import type { Participant } from 'livekit-client';\nimport { useEnsureParticipant } from '../context';\nimport type { UseMediaTrackOptions } from './useMediaTrack';\nimport { useMediaTrackBySourceOrName } from './useMediaTrackBySourceOrName';\n\n/** @public */\nexport function useMediaTrackByName(\n  name: string,\n  participant?: Participant,\n  options: UseMediaTrackOptions = {},\n) {\n  const p = useEnsureParticipant(participant);\n  return useMediaTrackBySourceOrName({ name, participant: p }, options);\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useVisualStableUpdate } from './useVisualStableUpdate';\n\n/**\n * The `usePagination` hook implements simple pagination logic for use with arrays.\n * @example\n * ```tsx\n * const tracks = useTracks();\n * const pagination = usePagination(4, tracks);\n *\n * <TrackLoop tracks={pagination.tracks} />\n * ```\n * @alpha\n */\nexport function usePagination(itemPerPage: number, trackReferences: TrackReferenceOrPlaceholder[]) {\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const totalPageCount = Math.max(Math.ceil(trackReferences.length / itemPerPage), 1);\n  if (currentPage > totalPageCount) {\n    setCurrentPage(totalPageCount);\n  }\n  const lastItemIndex = currentPage * itemPerPage;\n  const firstItemIndex = lastItemIndex - itemPerPage;\n\n  const changePage = (direction: 'next' | 'previous') => {\n    setCurrentPage((state) => {\n      if (direction === 'next') {\n        if (state === totalPageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  const goToPage = (num: number) => {\n    if (num > totalPageCount) {\n      setCurrentPage(totalPageCount);\n    } else if (num < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(num);\n    }\n  };\n\n  const updatedTrackReferences = useVisualStableUpdate(trackReferences, itemPerPage);\n\n  return {\n    totalPageCount,\n    nextPage: () => changePage('next'),\n    prevPage: () => changePage('previous'),\n    setPage: goToPage,\n    firstItemIndex,\n    lastItemIndex,\n    tracks: updatedTrackReferences.slice(firstItemIndex, lastItemIndex),\n    currentPage,\n  };\n}\n\nexport default usePagination;\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { log, sortTrackReferences, updatePages } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseVisualStableUpdateOptions {\n  /** Overwrites the default sort function. */\n  customSortFunction?: (\n    trackReferences: TrackReferenceOrPlaceholder[],\n  ) => TrackReferenceOrPlaceholder[];\n}\n\n/**\n * The useVisualStableUpdate hook tries to keep visual updates of the TackBundles array to a minimum,\n * while still trying to display important tiles such as speaking participants or screen shares.\n *\n * Updating works with pagination. For example, if a participant starts speaking on the second page,\n * they will be moved to the first page by replacing the least active/interesting participant on the first page.\n *\n * @beta\n */\nexport function useVisualStableUpdate(\n  /** `TrackReference`s to display in the grid.  */\n  trackReferences: TrackReferenceOrPlaceholder[],\n  maxItemsOnPage: number,\n  options: UseVisualStableUpdateOptions = {},\n): TrackReferenceOrPlaceholder[] {\n  const lastTrackRefs = React.useRef<TrackReferenceOrPlaceholder[]>([]);\n  const lastMaxItemsOnPage = React.useRef<number>(-1);\n  const layoutChanged = maxItemsOnPage !== lastMaxItemsOnPage.current;\n\n  const sortedTrackRefs =\n    typeof options.customSortFunction === 'function'\n      ? options.customSortFunction(trackReferences)\n      : sortTrackReferences(trackReferences);\n\n  let updatedTrackRefs: TrackReferenceOrPlaceholder[] = [...sortedTrackRefs];\n  if (layoutChanged === false) {\n    try {\n      updatedTrackRefs = updatePages(lastTrackRefs.current, sortedTrackRefs, maxItemsOnPage);\n    } catch (error) {\n      log.error('Error while running updatePages(): ', error);\n    }\n  }\n\n  // Save info for to compare against in the next update cycle.\n  if (layoutChanged) {\n    lastTrackRefs.current = sortedTrackRefs;\n  } else {\n    lastTrackRefs.current = updatedTrackRefs;\n  }\n  lastMaxItemsOnPage.current = maxItemsOnPage;\n\n  return updatedTrackRefs;\n}\n","import * as React from 'react';\nimport type { Participant } from 'livekit-client';\nimport { participantPermissionObserver } from '@livekit/components-core';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal/useObservableState';\n\n/** @public */\nexport interface UseParticipantPermissionsOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport function useParticipantPermissions(options: UseParticipantPermissionsOptions = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const permissionObserver = React.useMemo(() => participantPermissionObserver(p), [p]);\n  const permissions = useObservableState(permissionObserver, p.permissions);\n  return permissions;\n}\n","import { connectedParticipantsObserver } from '@livekit/components-core';\nimport type { RoomEvent, RemoteParticipant, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport interface UseRemoteParticipantsOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what RoomEvents the hook updates.\n   * By default it updates on all relevant RoomEvents to keep the returned participants array up to date.\n   * The minimal set of non-overwriteable `RoomEvents` is: `[RoomEvent.ParticipantConnected, RoomEvent.ParticipantDisconnected, RoomEvent.ConnectionStateChanged]`\n   */\n  updateOnlyOn?: RoomEvent[];\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The useRemoteParticipants\n *\n * @public\n */\nexport const useRemoteParticipants = (options: UseRemoteParticipantsOptions = {}) => {\n  const room = useEnsureRoom(options.room);\n  const [participants, setParticipants] = React.useState<RemoteParticipant[]>([]);\n\n  React.useEffect(() => {\n    const listener = connectedParticipantsObserver(room, {\n      additionalRoomEvents: options.updateOnlyOn,\n    }).subscribe(setParticipants);\n    return () => listener.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn)]);\n  return participants;\n};\n","import type { Room, RoomEvent } from 'livekit-client';\nimport { useLocalParticipant } from './useLocalParticipant';\nimport { useRemoteParticipants } from './useRemoteParticipants';\n\n/** @public */\nexport interface UseParticipantsOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what RoomEvents the hook updates.\n   * By default it updates on all relevant RoomEvents to keep the returned participants array up to date.\n   * The minimal set of non-overwriteable `RoomEvents` is: `[RoomEvent.ParticipantConnected, RoomEvent.ParticipantDisconnected, RoomEvent.ConnectionStateChanged]`\n   */\n  updateOnlyOn?: RoomEvent[];\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The useParticipants hook returns all participants (local and remote) of the current room.\n * @public\n */\nexport const useParticipants = (options: UseParticipantsOptions = {}) => {\n  const remoteParticipants = useRemoteParticipants(options);\n  const { localParticipant } = useLocalParticipant(options);\n\n  return [localParticipant, ...remoteParticipants];\n};\n","import { connectedParticipantObserver } from '@livekit/components-core';\nimport type { ParticipantEvent, RemoteParticipant } from 'livekit-client';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseRemoteParticipantOptions {\n  updateOnlyOn?: ParticipantEvent[];\n}\n\n/** @public */\nexport const useRemoteParticipant = (\n  identity: string,\n  options: UseRemoteParticipantOptions = {},\n): RemoteParticipant | undefined => {\n  const room = useRoomContext();\n  const [updateOnlyOn] = React.useState(options.updateOnlyOn);\n\n  const observable = React.useMemo(\n    () => connectedParticipantObserver(room, identity, { additionalEvents: updateOnlyOn }),\n    [room, identity, updateOnlyOn],\n  );\n  const participant = useObservableState(\n    observable,\n    room.getParticipantByIdentity(identity) as RemoteParticipant | undefined,\n  );\n  return participant;\n};\n","import { sortParticipants } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useSpeakingParticipants } from './useSpeakingParticipants';\n\n/**\n * The useSortedParticipants hook returns the only the active speakers of all participants.\n *\n * @public\n */\nexport function useSortedParticipants(participants: Array<Participant>) {\n  const [sortedParticipants, setSortedParticipants] = React.useState(\n    sortParticipants(participants),\n  );\n  const activeSpeakers = useSpeakingParticipants();\n\n  React.useEffect(() => {\n    setSortedParticipants(sortParticipants(participants));\n  }, [activeSpeakers, participants]);\n  return sortedParticipants;\n}\n","import { activeSpeakerObserver } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The useSpeakingParticipants hook returns the only the active speakers of all participants.\n *\n * @public\n */\nexport const useSpeakingParticipants = () => {\n  const room = useRoomContext();\n  const speakerObserver = React.useMemo(() => activeSpeakerObserver(room), [room]);\n  const activeSpeakers = useObservableState(speakerObserver, room.activeSpeakers);\n  return activeSpeakers;\n};\n","import { log } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport interface UserInfo {\n  identity?: string;\n  name?: string;\n  metadata?: string;\n}\n\n/** @public */\nexport interface UseTokenOptions {\n  userInfo?: UserInfo;\n}\n\n/** @public */\nexport function useToken(\n  tokenEndpoint: string | undefined,\n  roomName: string,\n  options: UseTokenOptions = {},\n) {\n  const [token, setToken] = React.useState<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (tokenEndpoint === undefined) {\n      throw Error('token endpoint needs to be defined');\n    }\n    if (options.userInfo?.identity === undefined) {\n      return;\n    }\n    const tokenFetcher = async () => {\n      log.debug('fetching token');\n      const params = new URLSearchParams({ ...options.userInfo, roomName });\n      const res = await fetch(`${tokenEndpoint}?${params.toString()}`);\n      const { accessToken } = await res.json();\n      setToken(accessToken);\n    };\n    tokenFetcher();\n  }, [tokenEndpoint, roomName, options]);\n  return token;\n}\n","import type {\n  SourcesArray,\n  TrackReference,\n  TrackReferenceOrPlaceholder,\n  TrackSourceWithOptions,\n  TrackReferencePlaceholder,\n} from '@livekit/components-core';\nimport {\n  isSourcesWithOptions,\n  isSourceWitOptions,\n  log,\n  trackReferencesObservable,\n} from '@livekit/components-core';\nimport type { Participant, Room, RoomEvent } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport type UseTracksOptions = {\n  updateOnlyOn?: RoomEvent[];\n  onlySubscribed?: boolean;\n  room?: Room;\n};\n\n/** @public */\nexport type UseTracksHookReturnType<T> = T extends Track.Source[]\n  ? TrackReference[]\n  : T extends TrackSourceWithOptions[]\n  ? TrackReferenceOrPlaceholder[]\n  : never;\n\n/**\n * The `useTracks` hook returns an array of `TrackReference` or `TrackReferenceOrPlaceholder` depending on the provided `sources` property.\n * If only subscribed tracks are desired, set the `onlySubscribed` property to `true`.\n * @example\n * ```ts\n * // Return all camera track publications.\n * const trackReferences: TrackReference[] = useTracks([Track.Source.Camera])\n * ```\n * @example\n * ```ts\n * // Return all subscribed camera tracks as well as placeholders for\n * // participants without a camera subscription.\n * const trackReferencesWithPlaceholders: TrackReferenceOrPlaceholder[] = useTracks([{source: Track.Source.Camera, withPlaceholder: true}])\n * ```\n * @public\n */\nexport function useTracks<T extends SourcesArray = Track.Source[]>(\n  sources: T = [\n    Track.Source.Camera,\n    Track.Source.Microphone,\n    Track.Source.ScreenShare,\n    Track.Source.ScreenShareAudio,\n    Track.Source.Unknown,\n  ] as T,\n  options: UseTracksOptions = {},\n): UseTracksHookReturnType<T> {\n  const room = useEnsureRoom(options.room);\n  const [trackReferences, setTrackReferences] = React.useState<TrackReference[]>([]);\n  const [participants, setParticipants] = React.useState<Participant[]>([]);\n\n  const sources_ = React.useMemo(() => {\n    return sources.map((s) => (isSourceWitOptions(s) ? s.source : s));\n  }, [JSON.stringify(sources)]);\n\n  React.useEffect(() => {\n    const subscription = trackReferencesObservable(room, sources_, {\n      additionalRoomEvents: options.updateOnlyOn,\n      onlySubscribed: options.onlySubscribed,\n    }).subscribe(({ trackReferences, participants }) => {\n      log.debug('setting track bundles', trackReferences, participants);\n      setTrackReferences(trackReferences);\n      setParticipants(participants);\n    });\n    return () => subscription.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn), JSON.stringify(sources)]);\n\n  const maybeTrackReferences = React.useMemo(() => {\n    if (isSourcesWithOptions(sources)) {\n      const requirePlaceholder = requiredPlaceholders(sources, participants);\n      const trackReferencesWithPlaceholders = Array.from(\n        trackReferences,\n      ) as TrackReferenceOrPlaceholder[];\n      participants.forEach((participant) => {\n        if (requirePlaceholder.has(participant.identity)) {\n          const sourcesToAddPlaceholder = requirePlaceholder.get(participant.identity) ?? [];\n          sourcesToAddPlaceholder.forEach((placeholderSource) => {\n            if (\n              trackReferences.find(\n                ({ participant: p, publication }) =>\n                  participant.identity === p.identity && publication.source === placeholderSource,\n              )\n            ) {\n              return;\n            }\n            log.debug(\n              `Add ${placeholderSource} placeholder for participant ${participant.identity}.`,\n            );\n            const placeholder: TrackReferencePlaceholder = {\n              participant,\n              source: placeholderSource,\n            };\n            trackReferencesWithPlaceholders.push(placeholder);\n          });\n        }\n      });\n      return trackReferencesWithPlaceholders;\n    } else {\n      return trackReferences;\n    }\n  }, [trackReferences, participants, sources]);\n\n  return maybeTrackReferences as UseTracksHookReturnType<T>;\n}\n\nfunction difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\n\nexport function requiredPlaceholders<T extends SourcesArray>(\n  sources: T,\n  participants: Participant[],\n): Map<Participant['identity'], Track.Source[]> {\n  const placeholderMap = new Map<Participant['identity'], Track.Source[]>();\n  if (isSourcesWithOptions(sources)) {\n    const sourcesThatNeedPlaceholder = sources\n      .filter((sourceWithOption) => sourceWithOption.withPlaceholder)\n      .map((sourceWithOption) => sourceWithOption.source);\n\n    participants.forEach((participant) => {\n      const sourcesOfSubscribedTracks = participant\n        .getTracks()\n        .map((pub) => pub.track?.source)\n        .filter((trackSource): trackSource is Track.Source => trackSource !== undefined);\n      const placeholderNeededForThisParticipant = Array.from(\n        difference(new Set(sourcesThatNeedPlaceholder), new Set(sourcesOfSubscribedTracks)),\n      );\n      // If the participant needs placeholder add it to the placeholder map.\n      if (placeholderNeededForThisParticipant.length > 0) {\n        placeholderMap.set(participant.identity, placeholderNeededForThisParticipant);\n      }\n    });\n  }\n  return placeholderMap;\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { LayoutContextType } from '../context';\nimport { useEnsureLayoutContext } from '../context';\n\n/** @public */\nexport function usePinnedTracks(layoutContext?: LayoutContextType): TrackReferenceOrPlaceholder[] {\n  layoutContext = useEnsureLayoutContext(layoutContext);\n  return React.useMemo(() => {\n    if (layoutContext?.pin.state !== undefined && layoutContext.pin.state.length >= 1) {\n      return layoutContext.pin.state;\n    }\n    return [];\n  }, [layoutContext.pin.state]);\n}\n","import * as React from 'react';\n\n/**\n * @alpha\n */\nexport type UseSwipeOptions = {\n  minSwipeDistance?: number;\n  onLeftSwipe?: () => void;\n  onRightSwipe?: () => void;\n};\n\n/**\n * Simple implementation to detect horizontal swipe actions.\n * Accepts callbacks for on right and left swipes.\n * @example\n * ```tsx\n *  <div\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n    >\n * ```\n * @alpha\n */\nexport function useSwipe(element: React.RefObject<HTMLElement>, options: UseSwipeOptions = {}) {\n  const touchStart = React.useRef<number | null>(null);\n  const touchEnd = React.useRef<number | null>(null);\n\n  // The required distance between touchStart and touchEnd to be detected as a swipe.\n  const minSwipeDistance = options.minSwipeDistance ?? 50;\n\n  const onTouchStart = (event: TouchEvent) => {\n    touchEnd.current = null; // Otherwise the swipe is fired even with usual touch events.\n    touchStart.current = event.targetTouches[0].clientX;\n  };\n\n  const onTouchMove = (event: TouchEvent) => {\n    touchEnd.current = event.targetTouches[0].clientX;\n  };\n\n  const onTouchEnd = React.useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) {\n      return;\n    }\n    const distance = touchStart.current - touchEnd.current;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n\n    if (isLeftSwipe && options.onLeftSwipe) options.onLeftSwipe();\n    if (isRightSwipe && options.onRightSwipe) options.onRightSwipe();\n  }, [minSwipeDistance, options]);\n\n  React.useEffect(() => {\n    const elementCopy = element.current;\n    if (elementCopy) {\n      elementCopy.addEventListener('touchstart', onTouchStart);\n      elementCopy.addEventListener('touchmove', onTouchMove);\n      elementCopy.addEventListener('touchend', onTouchEnd);\n    }\n    return () => {\n      if (elementCopy) {\n        elementCopy.removeEventListener('touchstart', onTouchStart);\n        elementCopy.removeEventListener('touchmove', onTouchMove);\n        elementCopy.removeEventListener('touchend', onTouchEnd);\n      }\n    };\n  }, [element, onTouchEnd]);\n}\n","import type { Participant, Track, TrackPublication } from 'livekit-client';\nimport * as React from 'react';\nimport { useMediaTrackBySourceOrName } from '../../hooks/useMediaTrackBySourceOrName';\nimport type { ParticipantClickEvent } from '@livekit/components-core';\nimport { useEnsureParticipant } from '../../context';\n\n/** @public */\nexport type VideoTrackProps = React.HTMLAttributes<HTMLVideoElement> & {\n  source: Track.Source;\n  name?: string;\n  participant?: Participant;\n  publication?: TrackPublication;\n  onTrackClick?: (evt: ParticipantClickEvent) => void;\n  onSubscriptionStatusChanged?: (subscribed: boolean) => void;\n};\n\n/**\n * The VideoTrack component is responsible for rendering participant video tracks like `camera` and `screen_share`.\n * This component must have access to the participant's context, or alternatively pass it a `Participant` as a property.\n *\n * @example\n * ```tsx\n * <VideoTrack source={Track.Source.Camera} />\n * ```\n * @see {@link @livekit/components-react#ParticipantTile | ParticipantTile}\n * @public\n */\nexport function VideoTrack({\n  onTrackClick,\n  onClick,\n  onSubscriptionStatusChanged,\n  name,\n  publication,\n  source,\n  ...props\n}: VideoTrackProps) {\n  const mediaEl = React.useRef<HTMLVideoElement>(null);\n  const participant = useEnsureParticipant(props.participant);\n  const {\n    elementProps,\n    publication: pub,\n    isSubscribed,\n  } = useMediaTrackBySourceOrName(\n    { participant, name, source, publication },\n    {\n      element: mediaEl,\n      props,\n    },\n  );\n\n  React.useEffect(() => {\n    onSubscriptionStatusChanged?.(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n\n  const clickHandler = (evt: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    onClick?.(evt);\n    onTrackClick?.({ participant, track: pub });\n  };\n\n  return <video ref={mediaEl} {...elementProps} muted={true} onClick={clickHandler}></video>;\n}\n","import type { Participant, Track, TrackPublication } from 'livekit-client';\nimport * as React from 'react';\nimport { useMediaTrackBySourceOrName } from '../../hooks/useMediaTrackBySourceOrName';\nimport { log } from '@livekit/components-core';\nimport { useEnsureParticipant } from '../../context';\nimport { RemoteAudioTrack } from 'livekit-client';\n\n/** @public */\nexport type AudioTrackProps<T extends HTMLMediaElement = HTMLMediaElement> =\n  React.HTMLAttributes<T> & {\n    source: Track.Source;\n    name?: string;\n    participant?: Participant;\n    publication?: TrackPublication;\n    onSubscriptionStatusChanged?: (subscribed: boolean) => void;\n    /** by the default the range is between 0 and 1 */\n    volume?: number;\n  };\n\n/**\n * The AudioTrack component is responsible for rendering participant audio tracks.\n * This component must have access to the participant's context, or alternatively pass it a `Participant` as a property.\n *\n * @example\n * ```tsx\n *   <ParticipantTile>\n *     <AudioTrack source={Track.Source.Microphone} />\n *   </ParticipantTile>\n * ```\n *\n * @see `ParticipantTile` component\n * @public\n */\nexport function AudioTrack({ onSubscriptionStatusChanged, volume, ...props }: AudioTrackProps) {\n  const { source, name, publication } = props;\n  const mediaEl = React.useRef<HTMLAudioElement>(null);\n  const participant = useEnsureParticipant(props.participant);\n\n  const { elementProps, isSubscribed, track } = useMediaTrackBySourceOrName(\n    { source, name, participant, publication },\n    {\n      element: mediaEl,\n      props,\n    },\n  );\n\n  React.useEffect(() => {\n    onSubscriptionStatusChanged?.(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n\n  React.useEffect(() => {\n    if (track === undefined || volume === undefined) {\n      return;\n    }\n    if (track instanceof RemoteAudioTrack) {\n      track.setVolume(volume);\n    } else {\n      log.warn('volume can only be set on remote audio tracks');\n    }\n  }, [volume, track]);\n\n  return <audio ref={mediaEl} {...elementProps} />;\n}\n","import * as React from 'react';\nexport const ParticipantNamePlaceholder = (props: any) => {\n  const [image, setImage] = React.useState<boolean>(false);\n\n  return (\n    <div>\n      {props.name && (\n        <img\n          style={image ? {} : { display: 'none' }}\n          src={`https://ui-avatars.com/api/?name=${props.name}&rounded=true&size=250&background=565656&bold=true`}\n          alt={`${props.name} profile image`}\n          onLoad={() => setImage(true)}\n        />\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport type { UseParticipantsOptions } from '../../hooks';\nimport { useGridLayout, usePagination, useSwipe } from '../../hooks';\nimport { mergeProps } from '../../utils';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { TrackLoop } from '../TrackLoop';\nimport { PaginationControl } from '../controls/PaginationControl';\nimport { PaginationIndicator } from '../controls/PaginationIndicator';\n\n/** @public */\nexport interface GridLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Pick<UseParticipantsOptions, 'updateOnlyOn'> {\n  children: React.ReactNode;\n  tracks: TrackReferenceOrPlaceholder[];\n}\n\n/**\n * The GridLayout component displays the nested participants in a grid where every participants has the same size.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <GridLayout tracks={tracks}>\n *     <ParticipantTile />\n *   </GridLayout>\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function GridLayout({ tracks, ...props }: GridLayoutProps) {\n  const gridEl = React.createRef<HTMLDivElement>();\n\n  const elementProps = React.useMemo(\n    () => mergeProps(props, { className: 'lk-grid-layout' }),\n    [props],\n  );\n  const { layout } = useGridLayout(gridEl, tracks.length);\n  const pagination = usePagination(layout.maxTiles, tracks);\n\n  useSwipe(gridEl, {\n    onLeftSwipe: pagination.nextPage,\n    onRightSwipe: pagination.prevPage,\n  });\n\n  return (\n    <div ref={gridEl} data-lk-pagination={pagination.totalPageCount > 1} {...elementProps}>\n      <TrackLoop tracks={pagination.tracks}>{props.children}</TrackLoop>\n      {tracks.length > layout.maxTiles && (\n        <>\n          <PaginationIndicator\n            totalPageCount={pagination.totalPageCount}\n            currentPage={pagination.currentPage}\n          />\n          <PaginationControl pagesContainer={gridEl} {...pagination} />\n        </>\n      )}\n    </div>\n  );\n}\n","import type { TrackReference, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { isTrackReference } from '@livekit/components-core';\nimport * as React from 'react';\nimport { TrackContext } from '../context/track-context';\nimport { cloneSingleChild } from '../utils';\n\n/** @public */\nexport type TrackLoopProps = {\n  /** Track references to loop over. */\n  tracks: TrackReference[] | TrackReferenceOrPlaceholder[];\n  /** The template component to be used in the loop. */\n  children: React.ReactNode;\n};\n\n/**\n * The TrackLoop component loops over tracks. It is for example a easy way to loop over all participant camera and screen share tracks.\n * TrackLoop creates a TrackContext for each track that you can use to e.g. render the track.\n *\n * @example\n * ```tsx\n * const tracks = useTracks([Track.Source.Camera]);\n * <TrackLoop tracks={tracks} >\n *  <TrackContext.Consumer>\n *    {(track) => track && <VideoTrack {...track}/>}\n *  </TrackContext.Consumer>\n * <TrackLoop />\n * ```\n * @public\n */\nexport const TrackLoop = ({ tracks, ...props }: TrackLoopProps) => {\n  return (\n    <>\n      {tracks.map((trackReference) => {\n        const trackSource = isTrackReference(trackReference)\n          ? trackReference.publication.source\n          : trackReference.source;\n        return (\n          <TrackContext.Provider\n            value={trackReference}\n            key={`${trackReference.participant.identity}_${trackSource}`}\n          >\n            {cloneSingleChild(props.children)}\n          </TrackContext.Provider>\n        );\n      })}\n    </>\n  );\n};\n","import * as React from 'react';\nimport SvgChevron from '../../assets/icons/Chevron';\nimport type { usePagination } from '../../hooks';\nimport { createInteractingObservable } from '@livekit/components-core';\n\nexport type PaginationControlProps = Pick<\n  ReturnType<typeof usePagination>,\n  'totalPageCount' | 'nextPage' | 'prevPage' | 'currentPage'\n> & {\n  /** Reference to an HTML element that holds the pages, while interacting (`mouseover`)\n   *  with it, the pagination controls will appear for a while. */\n  pagesContainer?: React.RefObject<HTMLElement>;\n};\n\nexport function PaginationControl({\n  totalPageCount,\n  nextPage,\n  prevPage,\n  currentPage,\n  pagesContainer: connectedElement,\n}: PaginationControlProps) {\n  const [interactive, setInteractive] = React.useState(false);\n  React.useEffect(() => {\n    let subscription:\n      | ReturnType<ReturnType<typeof createInteractingObservable>['subscribe']>\n      | undefined;\n    if (connectedElement) {\n      subscription = createInteractingObservable(connectedElement.current, 2000).subscribe(\n        setInteractive,\n      );\n    }\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [connectedElement]);\n\n  return (\n    <div className=\"lk-pagination-control\" data-lk-user-interaction={interactive}>\n      <button className=\"lk-button\" onClick={prevPage}>\n        <SvgChevron />\n      </button>\n      <span className=\"lk-pagination-count\">{`${currentPage} of ${totalPageCount}`}</span>\n      <button className=\"lk-button\" onClick={nextPage}>\n        <SvgChevron />\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport type PaginationIndicatorProps = {\n  totalPageCount: number;\n  currentPage: number;\n};\n\nexport function PaginationIndicator({ totalPageCount, currentPage }: PaginationIndicatorProps) {\n  const bubbles = new Array(totalPageCount).fill('').map((_, index) => {\n    if (index + 1 === currentPage) {\n      return <span data-lk-active key={index} />;\n    } else {\n      return <span key={index} />;\n    }\n  });\n\n  return <div className=\"lk-pagination-indicator\">{bubbles}</div>;\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { getScrollBarWidth } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useSize } from '../../hooks/internal';\nimport { useVisualStableUpdate } from '../../hooks';\nimport { TrackLoop } from '../TrackLoop';\n\nconst MIN_HEIGHT = 130;\nconst MIN_WIDTH = 140;\nconst MIN_VISIBLE_TILES = 1;\nconst ASPECT_RATIO = 16 / 10;\nconst ASPECT_RATIO_INVERT = (1 - ASPECT_RATIO) * -1;\n\n/** @public */\nexport interface CarouselLayoutProps extends React.HTMLAttributes<HTMLMediaElement> {\n  tracks: TrackReferenceOrPlaceholder[];\n  children: React.ReactNode;\n  /** Place the tiles vertically or horizontally next to each other.\n   * If undefined orientation is guessed by the dimensions of the container. */\n  orientation?: 'vertical' | 'horizontal';\n}\n\n/**\n * @deprecated Renamed to [[CarouselLayout]]\n */\nexport const CarouselView = CarouselLayout;\n\n/**\n * The `CarouselLayout` displays a list of tracks horizontally or vertically.\n * Depending on the size of the container, the carousel will display as many tiles as possible and overflows the rest.\n * The CarouselLayout uses the `useVisualStableUpdate` hook to ensure that tile reordering due to track updates\n * is visually stable but still moves the important tiles (speaking participants) to the front.\n *\n * @example\n * ```tsx\n * const tracks = useTracks();\n * <CarouselLayout tracks={tracks}>\n *   <ParticipantTile />\n * </CarouselLayout>\n * ```\n * @public\n */\nexport function CarouselLayout({ tracks, orientation, ...props }: CarouselLayoutProps) {\n  const asideEl = React.useRef<HTMLDivElement>(null);\n  const [prevTiles, setPrevTiles] = React.useState(0);\n  const { width, height } = useSize(asideEl);\n  const carouselOrientation = orientation\n    ? orientation\n    : height >= width\n    ? 'vertical'\n    : 'horizontal';\n\n  const tileSpan =\n    carouselOrientation === 'vertical'\n      ? Math.max(width * ASPECT_RATIO_INVERT, MIN_HEIGHT)\n      : Math.max(height * ASPECT_RATIO, MIN_WIDTH);\n  const scrollBarWidth = getScrollBarWidth();\n\n  const tilesThatFit =\n    carouselOrientation === 'vertical'\n      ? Math.max((height - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES)\n      : Math.max((width - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES);\n\n  let maxVisibleTiles = Math.round(tilesThatFit);\n  if (Math.abs(tilesThatFit - prevTiles) < 0.5) {\n    maxVisibleTiles = Math.round(prevTiles);\n  } else if (prevTiles !== tilesThatFit) {\n    setPrevTiles(tilesThatFit);\n  }\n\n  const sortedTiles = useVisualStableUpdate(tracks, maxVisibleTiles);\n\n  React.useLayoutEffect(() => {\n    if (asideEl.current) {\n      asideEl.current.dataset.lkOrientation = carouselOrientation;\n      asideEl.current.style.setProperty('--lk-max-visible-tiles', maxVisibleTiles.toString());\n    }\n  }, [maxVisibleTiles, carouselOrientation]);\n\n  return (\n    <aside key={carouselOrientation} className=\"lk-carousel\" ref={asideEl} {...props}>\n      <TrackLoop tracks={sortedTiles}>{props.children}</TrackLoop>\n    </aside>\n  );\n}\n","import type { PinState, WidgetState } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { LayoutContextType } from '../../context';\nimport { LayoutContext, useEnsureCreateLayoutContext } from '../../context';\n\n/** @alpha */\nexport type LayoutContextProviderProps = {\n  value?: LayoutContextType;\n  onPinChange?: (state: PinState) => void;\n  onWidgetChange?: (state: WidgetState) => void;\n};\n\n/** @alpha */\nexport function LayoutContextProvider({\n  value,\n  onPinChange,\n  onWidgetChange,\n  children,\n}: React.PropsWithChildren<LayoutContextProviderProps>) {\n  const layoutContextValue = useEnsureCreateLayoutContext(value);\n\n  React.useEffect(() => {\n    log.debug('PinState Updated', { state: layoutContextValue.pin.state });\n    if (onPinChange && layoutContextValue.pin.state) onPinChange(layoutContextValue.pin.state);\n  }, [layoutContextValue.pin.state, onPinChange]);\n\n  React.useEffect(() => {\n    log.debug('Chat Widget Updated', { widgetState: layoutContextValue.widget.state });\n    if (onWidgetChange && layoutContextValue.widget.state) {\n      onWidgetChange(layoutContextValue.widget.state);\n    }\n  }, [onWidgetChange, layoutContextValue.widget.state]);\n\n  return <LayoutContext.Provider value={layoutContextValue}>{children}</LayoutContext.Provider>;\n}\n","import { log, setupLiveKitRoom } from '@livekit/components-core';\nimport type {\n  AudioCaptureOptions,\n  RoomConnectOptions,\n  RoomOptions,\n  ScreenShareCaptureOptions,\n  VideoCaptureOptions,\n} from 'livekit-client';\nimport { ConnectionState, MediaDeviceFailure, Room, RoomEvent } from 'livekit-client';\nimport * as React from 'react';\nimport { RoomContext } from '../context';\nimport { mergeProps } from '../utils';\n\n/** @public */\nexport interface LiveKitRoomProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onError'> {\n  /**\n   * URL to the LiveKit server.\n   * For example: `wss://<domain>.livekit.cloud`\n   * To simplify the implementation, `undefined` is also accepted as an intermediate value, but only with a valid string url can the connection be established.\n   */\n  serverUrl: string | undefined;\n  /**\n   * A user specific access token for a client to authenticate to the room.\n   * This token is necessary to establish a connection to the room.\n   * To simplify the implementation, `undefined` is also accepted as an intermediate value, but only with a valid string token can the connection be established.\n   *\n   * @see https://docs.livekit.io/cloud/project-management/keys-and-tokens/#generating-access-tokens\n   */\n  token: string | undefined;\n  /**\n   * Publish audio immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/AudioCaptureOptions.html\n   */\n  audio?: AudioCaptureOptions | boolean;\n  /**\n   * Publish video immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/VideoCaptureOptions.html\n   */\n  video?: VideoCaptureOptions | boolean;\n  /**\n   * Publish screen share immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/ScreenShareCaptureOptions.html\n   */\n  screen?: ScreenShareCaptureOptions | boolean;\n  /**\n   * If set to true a connection to LiveKit room is initiated.\n   * @defaultValue `false`\n   */\n  connect?: boolean;\n  /**\n   * Options for when creating a new room.\n   * When you pass your own room instance to this component, these options have no effect.\n   * Instead, set the options directly in the room instance.\n   *\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/RoomOptions.html\n   */\n  options?: RoomOptions;\n  /**\n   * Define options how to connect to the LiveKit server.\n   *\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/RoomConnectOptions.html\n   */\n  connectOptions?: RoomConnectOptions;\n  onConnected?: () => void;\n  onDisconnected?: () => void;\n  onError?: (error: Error) => void;\n  onMediaDeviceFailure?: (failure?: MediaDeviceFailure) => void;\n  /**\n   * Optional room instance.\n   * By passing your own room instance you overwrite the `options` parameter,\n   * make sure to set the options directly on the room instance itself.\n   */\n  room?: Room;\n\n  simulateParticipants?: number | undefined;\n}\n\n// type RoomContextState = {\n//   room: Room;\n//   connectionState: ConnectionState;\n//   participants: Participant[];\n//   audioTracks: AudioTrack[];\n// };\n\nconst defaultRoomProps: Partial<LiveKitRoomProps> = {\n  connect: true,\n  audio: false,\n  video: false,\n};\n\n/** @public */\nexport function useLiveKitRoom(props: LiveKitRoomProps) {\n  const {\n    token,\n    serverUrl,\n    options,\n    room: passedRoom,\n    connectOptions,\n    connect,\n    audio,\n    video,\n    screen,\n    onConnected,\n    onDisconnected,\n    onError,\n    onMediaDeviceFailure,\n    simulateParticipants,\n    ...rest\n  } = { ...defaultRoomProps, ...props };\n  if (options && passedRoom) {\n    log.warn(\n      'when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.',\n    );\n  }\n\n  const [room, setRoom] = React.useState<Room | undefined>();\n\n  React.useEffect(() => {\n    setRoom(passedRoom ?? new Room(options));\n  }, [JSON.stringify(options), passedRoom]);\n\n  const htmlProps = React.useMemo(() => mergeProps(rest, setupLiveKitRoom()), [rest]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n\n      log.debug('trying to publish local tracks');\n      Promise.all([\n        localP.setMicrophoneEnabled(!!audio, typeof audio !== 'boolean' ? audio : undefined),\n        localP.setCameraEnabled(!!video, typeof video !== 'boolean' ? video : undefined),\n        localP.setScreenShareEnabled(!!screen, typeof screen !== 'boolean' ? screen : undefined),\n      ]).catch((e) => {\n        log.warn(e);\n        onError?.(e as Error);\n      });\n    };\n\n    const onMediaDeviceError = (e: Error) => {\n      const mediaDeviceFailure = MediaDeviceFailure.getFailure(e);\n      onMediaDeviceFailure?.(mediaDeviceFailure);\n    };\n    room.on(RoomEvent.SignalConnected, onSignalConnected);\n    room.on(RoomEvent.MediaDevicesError, onMediaDeviceError);\n\n    return () => {\n      room.off(RoomEvent.SignalConnected, onSignalConnected);\n      room.off(RoomEvent.MediaDevicesError, onMediaDeviceError);\n    };\n  }, [room, audio, video, screen, onError]);\n\n  React.useEffect(() => {\n    if (!room) return;\n\n    if (simulateParticipants) {\n      room.simulateParticipants({\n        participants: {\n          count: simulateParticipants,\n        },\n        publish: {\n          audio: true,\n          useRealTracks: true,\n        },\n      });\n      return;\n    }\n    if (!token) {\n      log.debug('no token yet');\n      return;\n    }\n    if (!serverUrl) {\n      log.warn('no livekit url provided');\n      onError?.(Error('no livekit url provided'));\n      return;\n    }\n    if (connect) {\n      log.debug('connecting');\n      room.connect(serverUrl, token, connectOptions).catch((e) => {\n        log.warn(e);\n        onError?.(e as Error);\n      });\n    } else {\n      log.debug('disconnecting because connect is false');\n      room.disconnect();\n    }\n  }, [\n    connect,\n    token,\n    JSON.stringify(connectOptions),\n    room,\n    onError,\n    serverUrl,\n    simulateParticipants,\n  ]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    const connectionStateChangeListener = (state: ConnectionState) => {\n      switch (state) {\n        case ConnectionState.Disconnected:\n          if (onDisconnected) onDisconnected();\n          break;\n        case ConnectionState.Connected:\n          if (onConnected) onConnected();\n          break;\n\n        default:\n          break;\n      }\n    };\n    room.on(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    return () => {\n      room.off(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    };\n  }, [token, onConnected, onDisconnected, room]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    return () => {\n      log.info('disconnecting on onmount');\n      room.disconnect();\n    };\n  }, [room]);\n\n  return { room, htmlProps };\n}\n\n/**\n * The LiveKitRoom component provides the room context to all its child components.\n * It is generally the starting point of your LiveKit app and the root of the LiveKit component tree.\n * It provides the room state as a React context to all child components, so you don't have to pass it yourself.\n *\n * @example\n * ```tsx\n * <LiveKitRoom\n *  token='<livekit-token>'\n *  serverUrl='<url-to-livekit-server>'\n *  connect={true}\n * >\n *     ...\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function LiveKitRoom(props: React.PropsWithChildren<LiveKitRoomProps>) {\n  const { room, htmlProps } = useLiveKitRoom(props);\n  return (\n    <div {...htmlProps}>\n      {room && <RoomContext.Provider value={room}>{props.children}</RoomContext.Provider>}\n    </div>\n  );\n}\n","import type { Participant } from 'livekit-client';\nimport { createAudioAnalyser, LocalAudioTrack, RemoteAudioTrack, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useMediaTrack } from '../../hooks';\n\n/** @public */\nexport interface AudioVisualizerProps extends React.HTMLAttributes<SVGElement> {\n  participant?: Participant;\n}\n\n/** @public */\nexport function AudioVisualizer({ participant, ...props }: AudioVisualizerProps) {\n  const [volumeBars, setVolumeBars] = React.useState<Array<number>>([]);\n\n  const svgWidth = 200;\n  const svgHeight = 90;\n  const barWidth = 6;\n  const barSpacing = 4;\n  const volMultiplier = 50;\n  const barCount = 7;\n\n  const { track } = useMediaTrack(Track.Source.Microphone, participant);\n\n  React.useEffect(() => {\n    if (!track || !(track instanceof LocalAudioTrack || track instanceof RemoteAudioTrack)) {\n      return;\n    }\n    const { analyser, cleanup } = createAudioAnalyser(track, {\n      smoothingTimeConstant: 0.8,\n      fftSize: 64,\n    });\n\n    const dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n    const calculateBars = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const sums: Array<number> = new Array(barCount).fill(0);\n      dataArray.slice(1);\n      const binSize = 6;\n\n      for (let i = 0; i < barCount / 2; i += 1) {\n        const id = Math.floor(barCount / 2 - i);\n        for (let k = 0; k < binSize; k += 1) {\n          sums[id] += Math.pow(dataArray[i * binSize + k] / 255, 2);\n        }\n        sums[id] /= binSize;\n      }\n      for (let i = 0; i < barCount / 2; i += 1) {\n        const id = Math.floor(barCount / 2 + i);\n        if (sums[id] !== 0) {\n          continue;\n        }\n        for (let k = 0; k < binSize; k += 1) {\n          sums[id] += Math.pow(dataArray[i * binSize + k] / 255, 2);\n        }\n        sums[id] /= binSize;\n      }\n      return sums.map((s) => s * volMultiplier);\n    };\n\n    const calcInterval = setInterval(() => {\n      const bars = calculateBars();\n      setVolumeBars(bars);\n    }, 100);\n\n    return () => {\n      clearInterval(calcInterval);\n      cleanup();\n    };\n  }, [track]);\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n      {...props}\n      className=\"lk-audio-visualizer\"\n    >\n      <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n      <g\n        style={{\n          transform: `translate(${(svgWidth - barCount * (barWidth + barSpacing)) / 2}px, 0)`,\n        }}\n      >\n        {volumeBars.map((vol, idx) => (\n          <rect\n            key={idx}\n            x={idx * (barWidth + barSpacing)}\n            y={svgHeight / 2 - vol / 2}\n            width={barWidth}\n            height={vol}\n          ></rect>\n        ))}\n      </g>\n    </svg>\n  );\n}\n","import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { ParticipantContext } from '../context';\nimport { cloneSingleChild } from '../utils';\n\n/** @public */\nexport type ParticipantLoopProps = {\n  /** The participants to loop over. If not provided, the participants from the current room context are used. */\n  participants: Participant[];\n  /** The template component to be used in the loop. */\n  children: React.ReactNode;\n};\n\n/**\n * The ParticipantLoop component loops over an array of participants to create a context for every participant.\n * This component takes exactly one child component as a template.\n * By providing your own template as a child you have full control over the look and feel of your participant representations.\n *\n * @remarks\n * If you want to loop over individual tracks instead of participants, you can use the `TrackLoop` component.\n *\n * @example\n * ```tsx\n * const participants = useParticipants();\n * <ParticipantLoop participants={participants}>\n *   <ParticipantName />\n * <ParticipantLoop />\n * ```\n * @public\n */\nexport const ParticipantLoop = ({ participants, ...props }: ParticipantLoopProps) => {\n  return (\n    <>\n      {participants.map((participant) => (\n        <ParticipantContext.Provider value={participant} key={participant.identity}>\n          {cloneSingleChild(props.children)}\n        </ParticipantContext.Provider>\n      ))}\n    </>\n  );\n};\n","import { isLocal } from '@livekit/components-core';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useTracks } from '../hooks';\nimport { AudioTrack } from './participant/AudioTrack';\n\n/**\n * The RoomAudioRenderer component is a drop-in solution for adding audio to your LiveKit app.\n * It takes care of handling remote participants’ audio tracks and makes sure that microphones and screen share are audible.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <RoomAudioRenderer />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const RoomAudioRenderer = () => {\n  const tracks = useTracks([Track.Source.Microphone, Track.Source.ScreenShareAudio], {\n    updateOnlyOn: [],\n  }).filter((ref) => !isLocal(ref.participant));\n  return (\n    <div style={{ display: 'none' }}>\n      {tracks.map((trackRef) => (\n        <AudioTrack key={trackRef.publication.trackSid} {...trackRef} />\n      ))}\n    </div>\n  );\n};\n","import { roomInfoObserver } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\n\nimport { useEnsureRoom } from '../context';\nimport { useObservableState } from '../hooks/internal/useObservableState';\n\n/** @public */\nexport interface UseRoomInfoOptions {\n  room?: Room;\n}\n\n/** @public */\nexport function useRoomInfo(options: UseRoomInfoOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const infoObserver = React.useMemo(() => roomInfoObserver(room), [room]);\n  const { name, metadata } = useObservableState(infoObserver, {\n    name: room.name,\n    metadata: room.metadata,\n  });\n\n  return { name, metadata };\n}\n\n/** @public */\nexport interface RoomNameProps extends React.HTMLAttributes<HTMLSpanElement> {\n  childrenPosition?: 'before' | 'after';\n}\n\n/**\n * The RoomName component renders the name of the connected LiveKit room inside a span tag.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <RoomName />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const RoomName = ({\n  childrenPosition = 'before',\n  children,\n  ...htmlAttributes\n}: RoomNameProps) => {\n  const { name } = useRoomInfo();\n\n  return (\n    <span {...htmlAttributes}>\n      {childrenPosition === 'before' && children}\n      {name}\n      {childrenPosition === 'after' && children}\n    </span>\n  );\n};\n","import type { Room } from 'livekit-client';\nimport { ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport { SpinnerIcon } from '../assets/icons';\nimport { mergeProps } from '../utils';\nimport { useConnectionState } from './ConnectionState';\n\n/** @public */\nexport function Toast(props: React.HTMLAttributes<HTMLDivElement>) {\n  const htmlProps = React.useMemo(() => mergeProps(props, { className: 'lk-toast' }), [props]);\n  return <div {...htmlProps}>{props.children}</div>;\n}\n\n/** @public */\nexport interface ConnectionStateToastProps extends React.HTMLAttributes<HTMLDivElement> {\n  room?: Room;\n}\n\n/** @public */\nexport function ConnectionStateToast(props: ConnectionStateToastProps) {\n  const [notification, setNotification] = React.useState<React.ReactElement | undefined>(undefined);\n  const state = useConnectionState(props.room);\n\n  React.useEffect(() => {\n    switch (state) {\n      case ConnectionState.Reconnecting:\n        setNotification(\n          <>\n            <SpinnerIcon className=\"lk-spinner\" /> Reconnecting\n          </>,\n        );\n        break;\n      case ConnectionState.Connecting:\n        setNotification(\n          <>\n            <SpinnerIcon className=\"lk-spinner\" /> Connecting\n          </>,\n        );\n        break;\n      case ConnectionState.Disconnected:\n        setNotification(<>Disconnected</>);\n        break;\n      default:\n        setNotification(undefined);\n        break;\n    }\n  }, [state]);\n  return notification ? <Toast className=\"lk-toast-connection-state\">{notification}</Toast> : <></>;\n}\n","import * as React from 'react';\nimport { Track } from 'livekit-client';\n\nimport { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\nimport { useEnsureParticipant } from '../../context';\n\nimport { AudioVisualizer } from './AudioVisualizer';\nimport type { ParticipantTileProps } from './ParticipantTile';\nimport { useParticipantTile, ParticipantContextIfNeeded } from './ParticipantTile';\nimport { AudioTrack } from './AudioTrack';\n\n/**\n * The ParticipantAudioTile component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TileLoop` or independently if a participant is passed as a property.\n *\n * @example\n * ```tsx\n * <ParticipantAudioTile />\n * ```\n * @see `ParticipantLoop` component\n * @public\n */\nexport const ParticipantAudioTile = ({\n  participant,\n  children,\n  source,\n  publication,\n  disableSpeakingIndicator,\n  onParticipantClick,\n  ...htmlProps\n}: ParticipantTileProps) => {\n  const p = useEnsureParticipant(participant);\n  const { elementProps } = useParticipantTile({\n    participant: p,\n    htmlProps,\n    disableSpeakingIndicator,\n    source: Track.Source.Microphone,\n    publication,\n    onParticipantClick,\n  });\n\n  return (\n    <div style={{ position: 'relative' }} {...elementProps}>\n      <ParticipantContextIfNeeded participant={p}>\n        {children ?? (\n          <>\n            <AudioTrack source={source ?? Track.Source.Microphone}></AudioTrack>\n            <AudioVisualizer />\n            <div className=\"lk-participant-metadata\">\n              <div className=\"lk-participant-metadata-item\">\n                <TrackMutedIndicator source={Track.Source.Microphone}></TrackMutedIndicator>\n                <ParticipantName />\n              </div>\n              <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" />\n            </div>\n          </>\n        )}\n      </ParticipantContextIfNeeded>\n    </div>\n  );\n};\n","import type { ChatMessage, ReceivedChatMessage } from '@livekit/components-core';\nimport { setupChat } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from '../hooks/internal/useObservableState';\nimport { cloneSingleChild } from '../utils';\nimport type { MessageFormatter } from '../components/ChatEntry';\nimport { ChatEntry } from '../components/ChatEntry';\n\nexport type { ChatMessage, ReceivedChatMessage };\n\n/** @public */\nexport interface ChatProps extends React.HTMLAttributes<HTMLDivElement> {\n  messageFormatter?: MessageFormatter;\n}\n\n/** @public */\nexport function useChat() {\n  const room = useRoomContext();\n  const [setup, setSetup] = React.useState<ReturnType<typeof setupChat>>();\n  const isSending = useObservableState(setup?.isSendingObservable, false);\n  const chatMessages = useObservableState(setup?.messageObservable, []);\n\n  React.useEffect(() => {\n    const setupChatReturn = setupChat(room);\n    setSetup(setupChatReturn);\n    return setupChatReturn.destroy;\n  }, [room]);\n\n  return { send: setup?.send, chatMessages, isSending };\n}\n\n/**\n * The Chat component adds a basis chat functionality to the LiveKit room. The messages are distributed to all participants\n * in the room. Only users who are in the room at the time of dispatch will receive the message.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <Chat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function Chat({ messageFormatter, ...props }: ChatProps) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const ulRef = React.useRef<HTMLUListElement>(null);\n  const { send, chatMessages, isSending } = useChat();\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (inputRef.current && inputRef.current.value.trim() !== '') {\n      if (send) {\n        await send(inputRef.current.value);\n        inputRef.current.value = '';\n        inputRef.current.focus();\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    if (ulRef) {\n      ulRef.current?.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, chatMessages]);\n\n  return (\n    <div {...props} className=\"lk-chat\">\n      <ul className=\"lk-list lk-chat-messages\" ref={ulRef}>\n        {props.children\n          ? chatMessages.map((msg, idx) =>\n              cloneSingleChild(props.children, {\n                entry: msg,\n                key: idx,\n                messageFormatter,\n              }),\n            )\n          : chatMessages.map((msg, idx, allMsg) => {\n              const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n              // If the time delta between two messages is bigger than 60s show timestamp.\n              const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 60_000;\n\n              return (\n                <ChatEntry\n                  key={idx}\n                  hideName={hideName}\n                  hideTimestamp={hideName === false ? false : hideTimestamp} // If we show the name always show the timestamp as well.\n                  entry={msg}\n                  messageFormatter={messageFormatter}\n                />\n              );\n            })}\n      </ul>\n      <form className=\"lk-chat-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"lk-form-control lk-chat-form-input\"\n          disabled={isSending}\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Enter a message...\"\n        />\n        <button type=\"submit\" className=\"lk-button lk-chat-form-button\" disabled={isSending}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n","import type { ReceivedChatMessage } from '@livekit/components-core';\nimport { tokenize, createDefaultGrammar } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport type MessageFormatter = (message: string) => React.ReactNode;\n\n/**\n * ChatEntry composes the HTML div element under the hood, so you can pass all its props.\n * These are the props specific to the ChatEntry component:\n * @public\n */\nexport interface ChatEntryProps extends React.HTMLAttributes<HTMLLIElement> {\n  /** The chat massage object to display. */\n  entry: ReceivedChatMessage;\n  /** Hide sender name. Useful when displaying multiple consecutive chat messages from the same person. */\n  hideName?: boolean;\n  /** Hide message timestamp. */\n  hideTimestamp?: boolean;\n  /** An optional formatter for the message body. */\n  messageFormatter?: MessageFormatter;\n}\n\n/**\n * The `ChatEntry` component holds and displays one chat message.\n *\n * @example\n * ```tsx\n * <Chat>\n *   <ChatEntry />\n * </Chat>\n * ```\n * @see `Chat`\n * @public\n */\nexport function ChatEntry({\n  entry,\n  hideName = false,\n  hideTimestamp = false,\n  messageFormatter,\n  ...props\n}: ChatEntryProps) {\n  const formattedMessage = React.useMemo(() => {\n    return messageFormatter ? messageFormatter(entry.message) : entry.message;\n  }, [entry.message, messageFormatter]);\n  const time = new Date(entry.timestamp);\n  const locale = navigator ? navigator.language : 'en-US';\n\n  return (\n    <li\n      className=\"lk-chat-entry\"\n      title={time.toLocaleTimeString(locale, { timeStyle: 'full' })}\n      data-lk-message-origin={entry.from?.isLocal ? 'local' : 'remote'}\n      {...props}\n    >\n      {(!hideTimestamp || !hideName) && (\n        <span className=\"lk-meta-data\">\n          {!hideName && (\n            <strong className=\"lk-participant-name\">\n              {entry.from?.name ?? entry.from?.identity}\n            </strong>\n          )}\n          {!hideTimestamp && (\n            <span className=\"lk-timestamp\">\n              {time.toLocaleTimeString(locale, { timeStyle: 'short' })}\n            </span>\n          )}\n        </span>\n      )}\n      <span className=\"lk-message-body\">{formattedMessage}</span>\n    </li>\n  );\n}\n\n/** @public */\nexport function formatChatMessageLinks(message: string): React.ReactNode {\n  return tokenize(message, createDefaultGrammar()).map((tok, i) => {\n    if (typeof tok === `string`) {\n      return tok;\n    } else {\n      const content = tok.content.toString();\n      const href =\n        tok.type === `url`\n          ? /^http(s?):\\/\\//.test(content)\n            ? content\n            : `https://${content}`\n          : `mailto:${content}`;\n      return (\n        <a className=\"lk-chat-link\" key={i} href={href} target=\"_blank\" rel=\"noreferrer\">\n          {content}\n        </a>\n      );\n    }\n  });\n}\n","import type { LocalAudioTrack, LocalVideoTrack } from 'livekit-client';\nimport { createLocalAudioTrack, createLocalVideoTrack, Track, VideoPresets } from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { useMediaDevices } from '../components/controls/MediaDeviceSelect';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport { log } from '@livekit/components-core';\nimport { ParticipantPlaceholder } from '../assets/images';\n\n/** @public */\nexport type LocalUserChoices = {\n  username: string;\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  videoDeviceId: string;\n  audioDeviceId: string;\n};\n\nconst DEFAULT_USER_CHOICES = {\n  username: '',\n  videoEnabled: true,\n  audioEnabled: true,\n  videoDeviceId: '',\n  audioDeviceId: '',\n};\n\n/** @public */\nexport type PreJoinProps = Omit<React.HTMLAttributes<HTMLDivElement>, 'onSubmit'> & {\n  /** This function is called with the `LocalUserChoices` if validation is passed. */\n  onSubmit?: (values: LocalUserChoices) => void;\n  /**\n   * Provide your custom validation function. Only if validation is successful the user choices are past to the onSubmit callback.\n   */\n  onValidate?: (values: LocalUserChoices) => boolean;\n  onError?: (error: Error) => void;\n  /** Prefill the input form with initial values. */\n  defaults?: Partial<LocalUserChoices>;\n  /** Display a debug window for your convenience. */\n  debug?: boolean;\n  joinLabel?: string;\n  micLabel?: string;\n  camLabel?: string;\n  userLabel?: string;\n};\n\n/** @public */\nexport function usePreviewDevice<T extends LocalVideoTrack | LocalAudioTrack>(\n  enabled: boolean,\n  deviceId: string,\n  kind: 'videoinput' | 'audioinput',\n) {\n  const [deviceError, setDeviceError] = React.useState<Error | null>(null);\n\n  const devices = useMediaDevices({ kind });\n  const [selectedDevice, setSelectedDevice] = React.useState<MediaDeviceInfo | undefined>(\n    undefined,\n  );\n\n  const [localTrack, setLocalTrack] = React.useState<T>();\n  const [localDeviceId, setLocalDeviceId] = React.useState<string>(deviceId);\n\n  React.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n\n  const createTrack = async (deviceId: string, kind: 'videoinput' | 'audioinput') => {\n    try {\n      const track =\n        kind === 'videoinput'\n          ? await createLocalVideoTrack({\n              deviceId: deviceId,\n              resolution: VideoPresets.h720.resolution,\n            })\n          : await createLocalAudioTrack({ deviceId });\n\n      const newDeviceId = await track.getDeviceId();\n      if (newDeviceId && deviceId !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track as T);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  };\n\n  const switchDevice = async (track: LocalVideoTrack | LocalAudioTrack, id: string) => {\n    await track.restartTrack({\n      deviceId: id,\n    });\n    prevDeviceId.current = id;\n  };\n\n  const prevDeviceId = React.useRef(localDeviceId);\n\n  React.useEffect(() => {\n    if (enabled && !localTrack && !deviceError) {\n      log.debug('creating track', kind);\n      createTrack(localDeviceId, kind);\n    }\n  }, [enabled, localTrack, deviceError]);\n\n  // switch camera device\n  React.useEffect(() => {\n    if (!enabled) {\n      if (localTrack) {\n        log.debug(`muting ${kind} track`);\n        localTrack.mute().then(() => log.debug(localTrack.mediaStreamTrack));\n      }\n      return;\n    }\n    if (\n      localTrack &&\n      selectedDevice?.deviceId &&\n      prevDeviceId.current !== selectedDevice?.deviceId\n    ) {\n      log.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      log.debug(`unmuting local ${kind} track`);\n      localTrack?.unmute();\n    }\n\n    return () => {\n      if (localTrack) {\n        log.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, [localTrack, selectedDevice, enabled, kind]);\n\n  React.useEffect(() => {\n    setSelectedDevice(devices.find((dev) => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError,\n  };\n}\n\n/**\n * The PreJoin prefab component is normally presented to the user before he enters a room.\n * This component allows the user to check and select the preferred media device (camera und microphone).\n * On submit the user decisions are returned, which can then be passed on to the LiveKitRoom so that the user enters the room with the correct media devices.\n *\n * @remarks\n * This component is independent from the LiveKitRoom component and don't has to be nested inside it.\n * Because it only access the local media tracks this component is self contained and works without connection to the LiveKit server.\n *\n * @example\n * ```tsx\n * <PreJoin />\n * ```\n * @public\n */\nexport const PreJoin = ({\n  defaults = {},\n  onValidate,\n  onSubmit,\n  onError,\n  debug,\n  joinLabel = 'Join Room',\n  micLabel = 'Microphone',\n  camLabel = 'Camera',\n  userLabel = 'Username',\n  ...htmlProps\n}: PreJoinProps) => {\n  const [userChoices, setUserChoices] = React.useState(DEFAULT_USER_CHOICES);\n  const [username, setUsername] = React.useState(\n    defaults.username ?? DEFAULT_USER_CHOICES.username,\n  );\n  const [videoEnabled, setVideoEnabled] = React.useState<boolean>(\n    defaults.videoEnabled ?? DEFAULT_USER_CHOICES.videoEnabled,\n  );\n  const [videoDeviceId, setVideoDeviceId] = React.useState<string>(\n    defaults.videoDeviceId ?? DEFAULT_USER_CHOICES.videoDeviceId,\n  );\n  const [audioEnabled, setAudioEnabled] = React.useState<boolean>(\n    defaults.audioEnabled ?? DEFAULT_USER_CHOICES.audioEnabled,\n  );\n  const [audioDeviceId, setAudioDeviceId] = React.useState<string>(\n    defaults.audioDeviceId ?? DEFAULT_USER_CHOICES.audioDeviceId,\n  );\n\n  const video = usePreviewDevice(videoEnabled, videoDeviceId, 'videoinput');\n\n  const videoEl = React.useRef(null);\n\n  React.useEffect(() => {\n    if (videoEl.current) video.localTrack?.attach(videoEl.current);\n\n    return () => {\n      video.localTrack?.detach();\n    };\n  }, [video.localTrack, videoEl]);\n\n  const audio = usePreviewDevice(audioEnabled, audioDeviceId, 'audioinput');\n\n  const [isValid, setIsValid] = React.useState<boolean>();\n\n  const handleValidation = React.useCallback(\n    (values: LocalUserChoices) => {\n      if (typeof onValidate === 'function') {\n        return onValidate(values);\n      } else {\n        return values.username !== '';\n      }\n    },\n    [onValidate],\n  );\n\n  React.useEffect(() => {\n    if (audio.deviceError) {\n      onError?.(audio.deviceError);\n    }\n  }, [audio.deviceError, onError]);\n  React.useEffect(() => {\n    if (video.deviceError) {\n      onError?.(video.deviceError);\n    }\n  }, [video.deviceError, onError]);\n\n  React.useEffect(() => {\n    const newUserChoices = {\n      username: username,\n      videoEnabled: videoEnabled,\n      videoDeviceId: video.selectedDevice?.deviceId ?? '',\n      audioEnabled: audioEnabled,\n      audioDeviceId: audio.selectedDevice?.deviceId ?? '',\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [\n    username,\n    videoEnabled,\n    video.selectedDevice,\n    handleValidation,\n    audioEnabled,\n    audio.selectedDevice,\n  ]);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === 'function') {\n        onSubmit(userChoices);\n      }\n    } else {\n      log.warn('Validation failed with: ', userChoices);\n    }\n  }\n\n  return (\n    <div className=\"lk-prejoin\" {...htmlProps}>\n      <div className=\"lk-video-container\">\n        {video.localTrack && <video ref={videoEl} width=\"1280\" height=\"720\" />}\n        {(!video.localTrack || !videoEnabled) && (\n          <div className=\"lk-camera-off-note\">\n            <ParticipantPlaceholder />\n          </div>\n        )}\n      </div>\n      <div className=\"lk-button-group-container\">\n        <div className=\"lk-button-group audio\">\n          <TrackToggle\n            initialState={audioEnabled}\n            source={Track.Source.Microphone}\n            onChange={(enabled) => setAudioEnabled(enabled)}\n          >\n            {micLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={audio.selectedDevice?.deviceId}\n              kind=\"audioinput\"\n              onActiveDeviceChange={(_, deviceId) => {\n                log.warn('active device chanaged', deviceId);\n                setAudioDeviceId(deviceId);\n              }}\n              disabled={!!!audio.selectedDevice}\n            />\n          </div>\n        </div>\n        <div className=\"lk-button-group video\">\n          <TrackToggle\n            initialState={videoEnabled}\n            source={Track.Source.Camera}\n            onChange={(enabled) => setVideoEnabled(enabled)}\n          >\n            {camLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={video.selectedDevice?.deviceId}\n              kind=\"videoinput\"\n              onActiveDeviceChange={(_, deviceId) => {\n                log.warn('active device chanaged', deviceId);\n                setVideoDeviceId(deviceId);\n              }}\n              disabled={!!!video.selectedDevice}\n            />\n          </div>\n        </div>\n      </div>\n\n      <form className=\"lk-username-container\">\n        <input\n          className=\"lk-form-control\"\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          defaultValue={username}\n          placeholder={userLabel}\n          onChange={(inputEl) => setUsername(inputEl.target.value)}\n          autoComplete=\"off\"\n        />\n        <button\n          className=\"lk-button lk-join-button\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          disabled={!isValid}\n        >\n          {joinLabel}\n        </button>\n      </form>\n\n      {debug && (\n        <>\n          <strong>User Choices:</strong>\n          <ul className=\"lk-list\" style={{ overflow: 'hidden', maxWidth: '15rem' }}>\n            <li>Username: {`${userChoices.username}`}</li>\n            <li>Video Enabled: {`${userChoices.videoEnabled}`}</li>\n            <li>Audio Enabled: {`${userChoices.audioEnabled}`}</li>\n            <li>Video Device: {`${userChoices.videoDeviceId}`}</li>\n            <li>Audio Device: {`${userChoices.audioDeviceId}`}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import { computeMenuPosition, wasClickOutside } from '@livekit/components-core';\nimport * as React from 'react';\nimport { MediaDeviceSelect } from '../components/controls/MediaDeviceSelect';\nimport { log } from '@livekit/components-core';\n\n/** @public */\nexport interface MediaDeviceMenuProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  kind?: MediaDeviceKind;\n  initialSelection?: string;\n  onActiveDeviceChange?: (kind: MediaDeviceKind, deviceId: string) => void;\n}\n\n/**\n * The MediaDeviceMenu prefab component is a button that opens a menu that lists\n * all media devices and allows the user to select them.\n *\n * @remarks\n * This component is implemented with the `MediaDeviceSelect` LiveKit components.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceMenu />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const MediaDeviceMenu = ({\n  kind,\n  initialSelection,\n  onActiveDeviceChange,\n  ...props\n}: MediaDeviceMenuProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [devices, setDevices] = React.useState<MediaDeviceInfo[]>([]);\n  const [updateRequired, setUpdateRequired] = React.useState<boolean>(true);\n\n  const handleActiveDeviceChange = (kind: MediaDeviceKind, deviceId: string) => {\n    log.debug('handle device change');\n    setIsOpen(false);\n    onActiveDeviceChange?.(kind, deviceId);\n  };\n\n  const button = React.useRef<HTMLButtonElement>(null);\n  const tooltip = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      computeMenuPosition(button.current, tooltip.current).then(({ x, y }) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, { left: `${x}px`, top: `${y}px` });\n        }\n      });\n    }\n    setUpdateRequired(false);\n  }, [button, tooltip, devices, updateRequired]);\n\n  const handleClickOutside = React.useCallback(\n    (event: MouseEvent) => {\n      if (!tooltip.current) {\n        return;\n      }\n      if (event.target === button.current) {\n        return;\n      }\n      if (isOpen && wasClickOutside(tooltip.current, event)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen, tooltip, button],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener<'click'>('click', handleClickOutside);\n    window.addEventListener<'resize'>('resize', () => setUpdateRequired(true));\n    return () => {\n      document.removeEventListener<'click'>('click', handleClickOutside);\n      window.removeEventListener<'resize'>('resize', () => setUpdateRequired(true));\n    };\n  }, [handleClickOutside, setUpdateRequired]);\n\n  return (\n    <>\n      <button\n        className=\"lk-button lk-button-menu\"\n        aria-pressed={isOpen}\n        {...props}\n        onClick={() => setIsOpen(!isOpen)}\n        ref={button}\n      >\n        {props.children}\n      </button>\n\n      <div\n        className=\"lk-device-menu\"\n        ref={tooltip}\n        style={{ visibility: isOpen ? 'visible' : 'hidden' }}\n      >\n        {kind ? (\n          <MediaDeviceSelect\n            initialSelection={initialSelection}\n            onActiveDeviceChange={(deviceId) => handleActiveDeviceChange(kind, deviceId)}\n            onDeviceListChange={setDevices}\n            kind={kind}\n          />\n        ) : (\n          <>\n            <div className=\"lk-device-menu-heading\">Audio inputs</div>\n            <MediaDeviceSelect\n              kind=\"audioinput\"\n              onActiveDeviceChange={(deviceId) => handleActiveDeviceChange('audioinput', deviceId)}\n              onDeviceListChange={setDevices}\n            />\n            <div className=\"lk-device-menu-heading\">Video inputs</div>\n            <MediaDeviceSelect\n              kind=\"videoinput\"\n              onActiveDeviceChange={(deviceId) => handleActiveDeviceChange('videoinput', deviceId)}\n              onDeviceListChange={setDevices}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nconst SvgParticipantPlaceholder = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={320}\n    height={320}\n    viewBox=\"0 0 320 320\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\"\n      fill=\"white\"\n      fillOpacity={0.25}\n    />\n    <path\n      d=\"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\"\n      fill=\"white\"\n      fillOpacity={0.25}\n    />\n  </svg>\n);\nexport default SvgParticipantPlaceholder;\n","import * as React from 'react';\nimport { LayoutContextProvider } from '../components/layout/LayoutContextProvider';\nimport { RoomAudioRenderer } from '../components/RoomAudioRenderer';\nimport { ControlBar } from './ControlBar';\nimport { FocusLayout, FocusLayoutContainer } from '../components/layout/FocusLayout';\nimport { GridLayout } from '../components/layout/GridLayout';\nimport type { WidgetState } from '@livekit/components-core';\nimport { isEqualTrackRef, isTrackReference, log } from '@livekit/components-core';\nimport { ShareLink } from './ShareLink';\nimport { Users } from './Users';\nimport { ConnectionStateToast } from '../components/Toast';\n// import type { MessageFormatter } from '../components/ChatEntry';\nimport { RoomEvent, Track } from 'livekit-client';\nimport { useTracks } from '../hooks/useTracks';\nimport { usePinnedTracks } from '../hooks/usePinnedTracks';\nimport { CarouselLayout } from '../components/layout/CarouselLayout';\nimport { useCreateLayoutContext } from '../context/layout-context';\nimport { ParticipantTile } from '../components';\nimport { Toast } from '../components';\nimport { UserToggle } from '../components/controls/UserToggle';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/**\n * @public\n */\nexport interface VideoConferenceProps extends React.HTMLAttributes<HTMLDivElement> {\n  // chatMessageFormatter?: MessageFormatter;\n  showShareButton: boolean;\n  showParticipantButton: boolean;\n  leaveButton: string;\n}\n\n/**\n * This component is the default setup of a classic LiveKit video conferencing app.\n * It provides functionality like switching between participant grid view and focus view.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <VideoConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function VideoConference({\n  showShareButton,\n  showParticipantButton,\n  leaveButton,\n  ...props\n}: VideoConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: null,\n  });\n  const lastAutoFocusedScreenShareTrack = React.useRef<TrackReferenceOrPlaceholder | null>(null);\n\n  const [waiting, setWaiting] = React.useState<string | null>(null); // Used to show toast message\n  const [waitingRoomCount, setWaitingRoomCount] = React.useState<number>(0);\n\n  const tracks = useTracks(\n    [\n      { source: Track.Source.Camera, withPlaceholder: true },\n      { source: Track.Source.ScreenShare, withPlaceholder: false },\n    ],\n    { updateOnlyOn: [RoomEvent.ActiveSpeakersChanged] },\n  );\n\n  const widgetUpdate = (state: WidgetState) => {\n    log.debug('updating widget state', state);\n    setWidgetState(state);\n  };\n\n  const updateCount = (count: number) => {\n    log.debug('count ', count);\n    setWaitingRoomCount(count);\n  };\n\n  const setWaitingMessage = (message: string) => {\n    if (showParticipantButton) {\n      setWaiting(message);\n    }\n  };\n\n  const layoutContext = useCreateLayoutContext();\n  const screenShareTracks = tracks\n    .filter(isTrackReference)\n    .filter((track) => track.publication.source === Track.Source.ScreenShare);\n\n  const focusTrack = usePinnedTracks(layoutContext)?.[0];\n  const carouselTracks = tracks.filter((track) => !isEqualTrackRef(track, focusTrack));\n\n  React.useEffect(() => {\n    if (waiting) {\n      // Remove toast message after 2 second\n      setTimeout(() => {\n        setWaiting(null);\n      }, 3000);\n    }\n  }, [waiting]);\n\n  React.useEffect(() => {\n    // If screen share tracks are published, and no pin is set explicitly, auto set the screen share.\n    if (screenShareTracks.length > 0 && lastAutoFocusedScreenShareTrack.current === null) {\n      log.debug('Auto set screen share focus:', { newScreenShareTrack: screenShareTracks[0] });\n      layoutContext.pin.dispatch?.({ msg: 'set_pin', trackReference: screenShareTracks[0] });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (\n      lastAutoFocusedScreenShareTrack.current &&\n      !screenShareTracks.some(\n        (track) =>\n          track.publication.trackSid ===\n          lastAutoFocusedScreenShareTrack.current?.publication?.trackSid,\n      )\n    ) {\n      log.debug('Auto clearing screen share focus.');\n      layoutContext.pin.dispatch?.({ msg: 'clear_pin' });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n  }, [\n    screenShareTracks.map((ref) => ref.publication.trackSid).join(),\n    focusTrack?.publication?.trackSid,\n  ]);\n\n  return (\n    <div className=\"lk-video-conference\" {...props}>\n      <LayoutContextProvider\n        value={layoutContext}\n        // onPinChange={handleFocusStateChange}\n        onWidgetChange={widgetUpdate}\n      >\n        <div className=\"lk-video-conference-inner\">\n          {!focusTrack ? (\n            <div className=\"lk-grid-layout-wrapper\">\n              <GridLayout tracks={tracks}>\n                <ParticipantTile />\n              </GridLayout>\n            </div>\n          ) : (\n            <div className=\"lk-focus-layout-wrapper\">\n              <FocusLayoutContainer>\n                <CarouselLayout tracks={carouselTracks}>\n                  <ParticipantTile />\n                </CarouselLayout>\n                {focusTrack && <FocusLayout track={focusTrack} />}\n              </FocusLayoutContainer>\n            </div>\n          )}\n          <ControlBar\n            controls={{\n              chat: false,\n              sharelink: showShareButton,\n              users: showParticipantButton,\n              leaveButton: leaveButton,\n            }}\n            waitingRoomCount={waitingRoomCount}\n            screenShareTracks={screenShareTracks.length}\n          />\n        </div>\n        <ShareLink style={{ display: widgetState.showChat == 'show_invite' ? 'flex' : 'none' }} />\n        <Users\n          style={{ display: widgetState.showChat == 'show_users' ? 'flex' : 'none' }}\n          onWaitingRoomChange={updateCount}\n          setWaiting={setWaitingMessage}\n        />\n        {waiting ? (\n          <Toast className=\"lk-toast-connection-state\">\n            <UserToggle>{waiting}</UserToggle>\n          </Toast>\n        ) : (\n          <></>\n        )}\n      </LayoutContextProvider>\n      <RoomAudioRenderer />\n      <ConnectionStateToast />\n    </div>\n  );\n}\n","import { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { DisconnectButton } from '../components/controls/DisconnectButton';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport { StartAudio } from '../components/controls/StartAudio';\nimport { ChatIcon, LeaveIcon } from '../assets/icons';\nimport { ChatToggle } from '../components/controls/ChatToggle';\nimport { ShareLinkToggle } from '../components/controls/ShareLinkToggle';\nimport { UserToggle } from '../components/controls/UserToggle';\nimport SvgInviteIcon from '../assets/icons/InviteIcon';\nimport SvgUserIcon from '../assets/icons/UsersIcon';\nimport { useLocalParticipantPermissions } from '../hooks';\nimport { useMediaQuery } from '../hooks/internal';\nimport { useMaybeLayoutContext } from '../context';\nimport { supportsScreenSharing } from '@livekit/components-core';\n\n/** @public */\nexport type ControlBarControls = {\n  microphone?: boolean;\n  camera?: boolean;\n  chat?: boolean;\n  screenShare?: boolean;\n  leave?: boolean;\n  sharelink?: boolean;\n  users?: boolean;\n  leaveButton?: string;\n};\n\n/** @public */\nexport type ControlBarProps = React.HTMLAttributes<HTMLDivElement> & {\n  variation?: 'minimal' | 'verbose' | 'textOnly';\n  controls?: ControlBarControls;\n  waitingRoomCount: number;\n  screenShareTracks?: number;\n};\n\n/**\n * The ControlBar prefab component gives the user the basic user interface\n * to control their media devices and leave the room.\n *\n * @remarks\n * This component is build with other LiveKit components like `TrackToggle`,\n * `DeviceSelectorButton`, `DisconnectButton` and `StartAudio`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ControlBar />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ControlBar({\n  variation,\n  controls,\n  waitingRoomCount,\n  screenShareTracks,\n  ...props\n}: ControlBarProps) {\n  const layoutContext = useMaybeLayoutContext();\n\n  const [isChatOpen, setIsChatOpen] = React.useState(false);\n  const [isShareLinkOpen, setIsShareLinkOpen] = React.useState(false);\n  const [isUserOpen, setIsUserOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    if (layoutContext?.widget.state?.showChat == 'show_chat') {\n      setIsChatOpen(layoutContext?.widget.state?.showChat == 'show_chat');\n    } else if (layoutContext?.widget.state?.showChat == 'show_invite') {\n      setIsShareLinkOpen(layoutContext?.widget.state?.showChat == 'show_invite');\n    } else if (layoutContext?.widget.state?.showChat == 'show_users') {\n      setIsUserOpen(layoutContext?.widget.state?.showChat == 'show_users');\n    }\n  }, [layoutContext?.widget.state?.showChat]);\n\n  const isTooLittleSpace = useMediaQuery(\n    `(max-width: ${isChatOpen || isShareLinkOpen || isUserOpen ? 1000 : 760}px)`,\n  );\n\n  const defaultVariation = isTooLittleSpace ? 'minimal' : 'verbose';\n  variation ??= defaultVariation;\n\n  const visibleControls = { leave: true, ...controls };\n\n  const localPermissions = useLocalParticipantPermissions();\n\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n    visibleControls.sharelink = false;\n    visibleControls.users = false;\n  } else {\n    visibleControls.camera ??= localPermissions.canPublish;\n    visibleControls.microphone ??= localPermissions.canPublish;\n    visibleControls.screenShare ??= localPermissions.canPublish;\n    visibleControls.chat ??= localPermissions.canPublishData && controls?.chat;\n    visibleControls.sharelink ??= localPermissions.canPublishData && controls?.sharelink;\n    visibleControls.users ??= localPermissions.canPublishData && controls?.users;\n  }\n\n  const showIcon = React.useMemo(\n    () => variation === 'minimal' || variation === 'verbose',\n    [variation],\n  );\n  const showText = React.useMemo(\n    () => variation === 'textOnly' || variation === 'verbose',\n    [variation],\n  );\n\n  const browserSupportsScreenSharing = supportsScreenSharing();\n\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(false);\n\n  const onScreenShareChange = (enabled: boolean) => {\n    setIsScreenShareEnabled(enabled);\n  };\n\n  return (\n    <div className=\"lk-control-bar\" {...props}>\n      {visibleControls.microphone && (\n        <div className=\"lk-button-group\">\n          <TrackToggle source={Track.Source.Microphone} showIcon={showIcon}>\n            {showText && 'Microphone'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu kind=\"audioinput\" />\n          </div>\n        </div>\n      )}\n      {visibleControls.camera && (\n        <div className=\"lk-button-group\">\n          <TrackToggle source={Track.Source.Camera} showIcon={showIcon}>\n            {showText && 'Camera'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu kind=\"videoinput\" />\n          </div>\n        </div>\n      )}\n      {visibleControls.screenShare && browserSupportsScreenSharing && (\n        <TrackToggle\n          source={Track.Source.ScreenShare}\n          captureOptions={{ audio: true, selfBrowserSurface: 'include' }}\n          showIcon={showIcon}\n          onChange={onScreenShareChange}\n          disabled={!isScreenShareEnabled && screenShareTracks !== 0}\n          title={\n            !isScreenShareEnabled && screenShareTracks !== 0\n              ? 'Someone has shared screen'\n              : isScreenShareEnabled\n              ? \"You're sharing your scrren\"\n              : 'You can share your screen'\n          }\n        >\n          {showText && (isScreenShareEnabled ? 'Stop screen share' : 'Share screen')}\n        </TrackToggle>\n      )}\n      {visibleControls.chat && (\n        <ChatToggle>\n          {showIcon && <ChatIcon />}\n          {showText && 'Chat'}\n        </ChatToggle>\n      )}\n      {visibleControls.sharelink && (\n        <ShareLinkToggle>\n          {showIcon && <SvgInviteIcon />}\n          {showText && 'Invite'}\n        </ShareLinkToggle>\n      )}\n      {visibleControls.users && (\n        <UserToggle>\n          {showIcon && <SvgUserIcon />}\n          {showText && 'Participants'}\n          {waitingRoomCount !== 0 && <span className=\"waiting-count\">{waitingRoomCount}</span>}\n        </UserToggle>\n      )}\n      {visibleControls.leave && (\n        <DisconnectButton>\n          {showIcon && <LeaveIcon />}\n          {showText && visibleControls.leaveButton}\n        </DisconnectButton>\n      )}\n      <StartAudio label=\"Start Audio\" />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useLayoutContext } from '../../context';\nimport { mergeProps } from '../../utils';\nimport { setupUserToggle } from '@livekit/components-core';\n\ninterface UseToggleUserProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\nfunction useToggleUserLink({ props }: UseToggleUserProps) {\n  const { dispatch } = useLayoutContext().widget;\n  const { className } = React.useMemo(() => setupUserToggle(), []);\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          if (dispatch) dispatch({ msg: 'show_users' });\n        },\n      }),\n    [props, className, dispatch],\n  );\n\n  return { mergedProps };\n}\n\n/** @public */\nexport type UserToggleProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n/**\n * The ShareLinkToggle component toggles the visibility of the chat component.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ToggleShareLink />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function UserToggle(props: UserToggleProps) {\n  const { mergedProps } = useToggleUserLink({ props });\n\n  return <button {...mergedProps}>{props.children}</button>;\n}\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\n\nconst SvgInviteIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={25} height={20} fill=\"none\" {...props}>\n    <path\n      d=\"M20.33 3.66996C20.1408 3.48213 19.9035 3.35008 19.6442 3.28833C19.3849 3.22659 19.1135 3.23753 18.86 3.31996L4.23 8.19996C3.95867 8.28593 3.71891 8.45039 3.54099 8.67255C3.36307 8.89471 3.25498 9.16462 3.23037 9.44818C3.20576 9.73174 3.26573 10.0162 3.40271 10.2657C3.5397 10.5152 3.74754 10.7185 4 10.85L10.07 13.85L13.07 19.94C13.1906 20.1783 13.3751 20.3785 13.6029 20.518C13.8307 20.6575 14.0929 20.7309 14.36 20.73H14.46C14.7461 20.7089 15.0192 20.6023 15.2439 20.4239C15.4686 20.2456 15.6345 20.0038 15.72 19.73L20.67 5.13996C20.7584 4.88789 20.7734 4.6159 20.7132 4.35565C20.653 4.09541 20.5201 3.85762 20.33 3.66996ZM4.85 9.57996L17.62 5.31996L10.53 12.41L4.85 9.57996ZM14.43 19.15L11.59 13.47L18.68 6.37996L14.43 19.15Z\"\n      fill=\"#ffffff\"\n    />\n  </svg>\n);\nexport default SvgInviteIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\n\nconst SvgUserIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={20} fill=\"none\" {...props}>\n    <path\n      id=\"Vector\"\n      d=\"M17 20C17 18.3431 14.7614 17 12 17C9.23858 17 7 18.3431 7 20M21 17.0004C21 15.7702 19.7659 14.7129 18 14.25M3 17.0004C3 15.7702 4.2341 14.7129 6 14.25M18 10.2361C18.6137 9.68679 19 8.8885 19 8C19 6.34315 17.6569 5 16 5C15.2316 5 14.5308 5.28885 14 5.76389M6 10.2361C5.38625 9.68679 5 8.8885 5 8C5 6.34315 6.34315 5 8 5C8.76835 5 9.46924 5.28885 10 5.76389M12 14C10.3431 14 9 12.6569 9 11C9 9.34315 10.3431 8 12 8C13.6569 8 15 9.34315 15 11C15 12.6569 13.6569 14 12 14Z\"\n      stroke=\"#ffffff\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"#ffffff\"\n    />\n  </svg>\n);\nexport default SvgUserIcon;\n","/* eslint-disable prettier/prettier */\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { Toast } from '../components';\n\nexport function useGetLink() {\n  const host = getHostUrl();\n  const link = `${host}/join/${useGetRoom().name}`;\n  return { link: link };\n}\n\nexport function useGetRoom() {\n  const room = useRoomContext();\n  return room;\n}\n\nexport function getHostUrl() {\n  return typeof window ? window.location.origin : '';\n}\n\nexport type User = {\n  user_id: string;\n  user_name: string;\n  full_name: string;\n  designation: string;\n  ext_no: string;\n  invited: boolean\n};\n\n/**\n * The Chat component adds a basis chat functionality to the LiveKit room. The messages are distributed to all participants\n * in the room. Only users who are in the room at the time of dispatch will receive the message.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <Chat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ShareLink({ ...props }: any) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const ulRef = React.useRef<HTMLUListElement>(null);\n  const { link } = useGetLink();\n  const [users, setUsers] = React.useState<User[]>([]);\n  const [searched, setSearched] = React.useState<User[]>([]);\n  const [showToast, setShowToast] = React.useState<boolean>(false);\n  // const [ checkedValues, setCheckedValues ] = React.useState<string[]>([]);\n  const room = useGetRoom();\n\n  async function searchUsers(key: string) {\n    if (key) {\n      const filteredData = users.filter(function (item) {\n        return (item.user_name.toLocaleLowerCase()).startsWith(key.toLocaleLowerCase());\n      });\n      setSearched(filteredData)\n    } else {\n      setSearched(users)\n    }\n  }\n\n  async function getUsers() {\n    const data = {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        meeting_id: room.name,\n      })\n    };\n    fetch(`${getHostUrl()}/api/get-users`, data).then(async (res) => {\n      if (res.ok) {\n        const body = await res.json();\n        setUsers(body);\n        setSearched(body);\n      } else {\n        throw Error('Error fetching server url, check server logs');\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    if (room.name) {\n      getUsers();\n    }\n  }, [room.name]);\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (inputRef.current && inputRef.current.value.trim() !== '') {\n      searchUsers(inputRef.current.value);\n    } else {\n      setSearched(users);\n    }\n  }\n\n  async function handleInvite(user: User) {\n    const data = {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"users\": JSON.stringify([user]), // body data type must match \"Content-Type\" header\n        \"message\": link,\n        \"meeting_id\": room.name,\n      })\n    };\n\n    fetch(`/api/invite-user`, data).then(async (res) => {\n      if (res.ok) {\n        user.invited = true;\n        // 1. Find the user with the provided id\n        const currentUserIndex = users.findIndex((item) => item.user_id === user.user_id);\n        // 2. Mark the user as invited\n        const updatedUser = { ...users[currentUserIndex], invited: true };\n        // 3. Update the todo list with the updated todo\n        const newUsers = [\n          ...users.slice(0, currentUserIndex),\n          updatedUser,\n          ...users.slice(currentUserIndex + 1)\n        ];\n        setUsers(newUsers);\n\n        // 1. Find the user with the provided id\n        const currentSearchedIndex = searched.findIndex((item) => item.user_id === user.user_id);\n        // 2. Mark the todo as complete\n        const updatedSearched = { ...searched[currentSearchedIndex], invited: true };\n        // 3. Update the todo list with the updated todo\n        const newSearched = [\n          ...searched.slice(0, currentSearchedIndex),\n          updatedSearched,\n          ...searched.slice(currentSearchedIndex + 1)\n        ];\n        setSearched(newSearched);\n      } else {\n        throw Error('Error fetching server url, check server logs');\n      }\n    });\n  }\n\n  async function handleCopy() {\n    navigator.clipboard.writeText(link);\n    setShowToast(true);\n  }\n\n  React.useEffect(() => {\n    if (showToast) {\n      setTimeout(() => {\n        setShowToast(false);\n      }, 3000)\n    }\n  }, [showToast]);\n\n  React.useEffect(() => {\n    if (ulRef) {\n      ulRef.current?.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, users]);\n\n  return (\n    <div {...props} className=\"lk-chat lk-sharelink\">\n      <form className=\"lk-chat-form\">\n        <input className=\"lk-form-control lk-chat-form-input\" type=\"text\" value={link} readOnly />\n        <button type=\"button\" className=\"lk-button lk-chat-form-button\" onClick={handleCopy}>\n          Copy\n        </button>\n      </form>\n\n      {showToast ? <Toast className=\"lk-toast-connection-state\">Copied</Toast> : <></>}\n\n      <form className=\"lk-chat-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"lk-form-control lk-chat-form-input\"\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Search User...\"\n          onChange={handleSubmit}\n        />\n      </form>\n\n      {searched.length > 0 ? (\n        <ul className=\"lk-list lk-chat-messages\" ref={ulRef}>\n          {searched.map((user, index) => {\n            return (\n              <li key={index} className=\"lk-chat-entry\">\n                <div>\n                  <span className=\"lk-message-body\">{user.full_name} {user.ext_no ? ` - ${user.ext_no}` : ''}</span>\n                  <span className=\"lk-message-body lk-message-text\">{user.designation}</span>\n                </div>\n\n                <button type=\"button\" onClick={() => handleInvite(user)} className={\"lk-button lk-chat-form-button\" + (user.invited ? ' invited' : '')}>\n                  {user.invited ? 'Invited' : 'Invite'}\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n","/* eslint-disable prettier/prettier */\nimport * as React from 'react';\nimport { useParticipants } from '../hooks';\nimport { ParticipantLoop } from '../components';\nimport { ParticipantList } from '../components/participant/ParticipantList';\nimport { useRoomContext } from '../context';\nimport type { LocalUserChoices } from './PreJoin';\nimport { ToggleSwitch } from '../components/ToggleSwitch';\nimport SvgApproveIcon from '../assets/icons/ApproveIcon';\nimport SvgRejectIcon from '../assets/icons/RejectIcon';\n\n/** @public */\nexport interface UserProps extends React.HTMLAttributes<HTMLDivElement> {\n  onWaitingRoomChange: (state: number) => void;\n  setWaiting: (state: string) => void;\n}\n\nexport type UserDataProps = {\n  /** The participants to loop over.\n   * If not provided, the participants from the current room context are used.\n   **/\n  participants: LocalUserChoices[];\n};\n\nexport function Users({ onWaitingRoomChange, ...props }: UserProps) {\n  const ulRef = React.useRef<HTMLUListElement>(null);\n  const participants = useParticipants(); // List of joined participant\n  const [waitingRoom, setWaitingRoom] = React.useState<any[]>([]); // List of users in waiting room\n  const [toggleWaiting, setToggleWaiting] = React.useState<boolean>(true); // Enable / Disable waiting room\n\n  const room = useRoomContext();\n  // const decoder = new TextDecoder();\n\n  // async function muteAllMircophone() {\n  // room.participants.forEach((participant) => {\n  //   const p = room.localParticipant;\n  // });\n  // await p.setCameraEnabled(false);\n  // }\n\n  /**\n   * Get list of users in waiting room\n   */\n  async function usersList() {\n    const postData = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        meeting_id: room.name,\n      }),\n    };\n    fetch(`/api/get-waiting-room-users`, postData).then(async (res) => {\n      if (res.ok) {\n        const body = await res.json();\n        setWaitingRoom(body.users);\n      } else {\n        throw Error('Error fetching server url, check server logs');\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    // Updating list user count in waiting room to parent component\n    if (room.name) {\n      usersList();\n    }\n  }, [room.name]);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      usersList();\n      // setWaiting(`Users are in waiting room`)\n    }, 2000)\n    return () => clearInterval(interval);\n  }, []);\n\n  React.useEffect(() => {\n    // Updating list user count in waiting room to parent component\n    onWaitingRoomChange(waitingRoom.length);\n  }, [onWaitingRoomChange, waitingRoom]);\n\n  React.useEffect(() => {\n    if (ulRef) {\n      ulRef.current?.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef]);\n\n  /**\n   * Accept or reject user from waiting room\n   *\n   * @param username Username\n   * @param type Accept or Reject\n   */\n  async function admitUser(identity: string, type: string) {\n    const postData = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ room: room.name, identity: identity, type: type }),\n    };\n\n    fetch(`/api/accept-request`, postData).then(async (res) => {\n      if (res.status) {\n        const remaining = waitingRoom.filter(\n          (item: any) => item.identity !== identity,\n        );\n        setWaitingRoom(remaining);\n      } else {\n        throw Error('Error fetching server url, check server logs');\n      }\n    });\n  }\n\n  /**\n   * Approve all participant from waiting room\n   *\n   */\n  async function approveAll() {\n    const postData = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ meeting_id: room.name }),\n    };\n\n    fetch(`/api/approve-all-participant`, postData).then(async (res) => {\n      if (res.status) {\n        setWaitingRoom([]);\n      } else {\n        throw Error('Error fetching server url, check server logs');\n      }\n    });\n  }\n\n  /**\n   * Toggle waiting room to enable or disable\n   *\n   * @param checked\n   */\n  const onToggleWaitingChange = (checked: any) => {\n    const postData = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ room: room.name, waiting_room: checked }),\n    };\n\n    fetch(`/api/set-waitingroom`, postData).then(async (res) => {\n      if (res.status) {\n        setToggleWaiting(checked);\n      } else {\n        throw Error('Error fetching server url, check server logs');\n      }\n    });\n  };\n\n  return (\n    <div {...props} className=\"lk-chat lk-users\">\n      <div className=\"lk-waitinroom\">\n        <div className=\"tl-waitingroom-heading\">\n          <h3>Waiting Room</h3>\n\n          <div className=\"tl-toggle-switch\">\n            <ToggleSwitch\n              id=\"toggleSwitch\"\n              checked={toggleWaiting}\n              onChange={onToggleWaitingChange}\n              name={'toggleSwitch'}\n              optionLabels={['On', 'Off']}\n              small={false}\n              disabled={false}\n            />\n          </div>\n\n          {toggleWaiting && waitingRoom.length\n            ?\n            <button\n              className=\"lk-button tl-info tl-approve\"\n              onClick={() => approveAll()}\n            >\n              Approve All\n            </button>\n            :\n            \"\"\n          }\n        </div>\n\n        {waitingRoom.map((item: any) => (\n          <div className=\"tl-participant-li\" key={item.username}>\n            <div className=\"lk-participant-metadata\">\n              <div className=\"lk-participant-metadata-item\">{item.username}</div>\n              <div className=\"display-flex\">\n                <button\n                  className=\"lk-button lk-waiting-room lk-success\"\n                  onClick={() => admitUser(item.identity, 'accepted')}\n                >\n                  <SvgApproveIcon />\n                </button>\n                <button\n                  className=\"lk-button lk-waiting-room lk-danger\"\n                  onClick={() => admitUser(item.identity, 'rejected')}\n                >\n                  <SvgRejectIcon />\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"lk-participants\">\n        <div className=\"tl-participants-heading\">\n          <h3>Participants  <span>({participants.length})</span></h3>\n        </div>\n        {participants?.length ? (\n          <ParticipantLoop participants={participants}>\n            <ParticipantList />\n          </ParticipantLoop>\n        ) : (\n          <div>\n            <h5>No Participants</h5>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Track } from 'livekit-client';\nimport type { Participant, TrackPublication } from 'livekit-client';\nimport type { ParticipantClickEvent } from '@livekit/components-core';\n// import { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { useEnsureParticipant } from '../../context';\nimport { useParticipantTile, ParticipantContextIfNeeded } from './ParticipantTile';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\n\n/** @public */\nexport type ParticipantListProps = React.HTMLAttributes<HTMLDivElement> & {\n  disableSpeakingIndicator?: boolean;\n  participant?: Participant;\n  audit_source?: Track.Source.Microphone;\n  video_source?: Track.Source.Camera;\n  publication?: TrackPublication;\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n};\n\n/**\n * The ParticipantList component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TileLoop` or independently if a participant is passed as a property.\n *\n * @example\n * ```tsx\n * <ParticipantList />\n * ```\n * @see `ParticipantList` component\n * @public\n */\nexport const ParticipantList = ({\n  participant,\n  children,\n  publication,\n  disableSpeakingIndicator,\n  onParticipantClick,\n  ...htmlProps\n}: ParticipantListProps) => {\n  const p = useEnsureParticipant(participant);\n  const { elementProps } = useParticipantTile({\n    participant: p,\n    htmlProps,\n    disableSpeakingIndicator,\n    source: Track.Source.Microphone,\n    publication,\n    onParticipantClick,\n  });\n\n  return (\n    <div style={{ position: 'relative' }} {...elementProps}>\n      <ParticipantContextIfNeeded participant={p}>\n        {children ?? (\n          <>\n            <div className=\"lk-participant-metadata\">\n              <div className=\"lk-participant-metadata-item\">\n                <ParticipantName />\n              </div>\n              <div className=\"display-flex\">\n                <TrackMutedIndicator\n                  source={Track.Source.Microphone}\n                  show={'always'}\n                ></TrackMutedIndicator>\n                <TrackMutedIndicator\n                  source={Track.Source.Camera}\n                  show={'always'}\n                ></TrackMutedIndicator>\n              </div>\n              {/* <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" /> */}\n            </div>\n          </>\n        )}\n      </ParticipantContextIfNeeded>\n    </div>\n  );\n};\n","import React from 'react';\n\n// Set optionLabels for rendering.\nexport type ToggleSwitchProps = {\n  optionLabels: ['Yes', 'No'];\n};\n\nexport type ToggleSwitchPropTypes = {\n  id: string;\n  checked: boolean;\n  name: string;\n  onChange: (checked: boolean) => void;\n  optionLabels: string[];\n  small: boolean;\n  disabled: boolean;\n};\n\n/*\nToggle Switch Component\nNote: id, checked and onChange are required for ToggleSwitch component to function. The props name, small, disabled\nand optionLabels are optional.\nUsage: <ToggleSwitch id=\"id\" checked={value} onChange={checked => setValue(checked)}} />\n*/\n\nexport const ToggleSwitch = ({\n  id,\n  name,\n  checked,\n  onChange,\n  optionLabels,\n  small,\n  disabled,\n}: ToggleSwitchPropTypes) => {\n  function handleKeyPress(e: React.KeyboardEvent<HTMLLabelElement>) {\n    if (e.keyCode !== 32) return;\n\n    e.preventDefault();\n    onChange(!checked);\n  }\n\n  return (\n    <div className={'toggle-switch' + (small ? ' small-switch' : '')}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        className=\"toggle-switch-checkbox\"\n        id={id}\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n        disabled={disabled}\n      />\n      {id ? (\n        <label\n          className=\"toggle-switch-label\"\n          tabIndex={disabled ? -1 : 1}\n          onKeyDown={(e) => handleKeyPress(e)}\n          htmlFor={id}\n        >\n          <span\n            className={\n              disabled ? 'toggle-switch-inner toggle-switch-disabled' : 'toggle-switch-inner'\n            }\n            data-yes={optionLabels[0]}\n            data-no={optionLabels[1]}\n            tabIndex={-1}\n          />\n          <span\n            className={\n              disabled ? 'toggle-switch-switch toggle-switch-disabled' : 'toggle-switch-switch'\n            }\n            tabIndex={-1}\n          />\n        </label>\n      ) : null}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\n\nconst SvgApproveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width=\"15\"\n    height=\"11\"\n    viewBox=\"0 0 17 13\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M6.44587 12.3181C6.35059 12.3854 6.21756 12.3816 6.13768 12.2966C5.87427 12.0164 5.62193 11.7435 5.3696 11.4706C3.87981 9.87788 2.38394 8.27905 0.900223 6.68022C0.225256 5.95072 0.316468 4.8747 1.09481 4.30933C1.73937 3.83516 2.60284 3.91419 3.18052 4.52211C4.17777 5.57381 5.16286 6.63767 6.14794 7.69545C6.18071 7.73039 6.21348 7.76612 6.24709 7.80263C6.35423 7.919 6.5347 7.92887 6.64657 7.81703V7.81703C8.25798 6.30939 9.86939 4.80175 11.4869 3.30019C12.399 2.4491 13.305 1.60409 14.2232 0.765159C15.1293 -0.0676915 16.5461 0.357852 16.8258 1.54938C16.9717 2.1573 16.7832 2.68011 16.3211 3.11173C15.0928 4.25462 13.8705 5.39751 12.6483 6.5404C11.4565 7.65289 10.2646 8.76539 9.0728 9.87788C8.20696 10.689 7.33509 11.4881 6.4692 12.2991C6.46178 12.3061 6.45416 12.3123 6.44587 12.3181V12.3181Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\nexport default SvgApproveIcon;\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\n\nconst SvgRejectIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width=\"15\"\n    height=\"11\"\n    viewBox=\"0 0 13 13\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M6.70508 8.22715C6.03352 8.9047 5.39471 9.54143 4.74772 10.1863C4.16624 10.7659 3.59295 11.3455 3.01147 11.9169C2.61836 12.3006 2.15154 12.4231 1.62739 12.2271C1.136 12.0475 0.849362 11.672 0.775653 11.1578C0.710135 10.7006 0.8985 10.3251 1.2179 10.0067C2.33991 8.88837 3.46191 7.77001 4.58392 6.65165C4.66582 6.57001 4.76409 6.51287 4.87875 6.43124C4.7559 6.30063 4.6822 6.21899 4.60849 6.14553C3.47829 5.01084 2.33991 3.88431 1.20971 2.74962C0.677375 2.21085 0.620047 1.49248 1.0623 0.953708C1.57826 0.325139 2.43819 0.292486 3.05242 0.896565C4.18262 2.01493 5.31281 3.14146 6.43482 4.27614C6.51672 4.35778 6.57404 4.45574 6.66413 4.57002C6.78698 4.45574 6.86888 4.38227 6.94259 4.3088C8.08097 3.17411 9.21117 2.03942 10.3496 0.912892C10.931 0.333302 11.7336 0.325139 12.2578 0.863913C12.7655 1.3782 12.7655 2.16187 12.2414 2.7088C11.6845 3.28839 11.103 3.85166 10.5297 4.42308C9.88273 5.06798 9.22755 5.72104 8.55598 6.39042C8.64607 6.48838 8.71978 6.56185 8.79349 6.64348C9.92368 7.77001 11.0457 8.89654 12.1759 10.0231C12.5199 10.3659 12.7082 10.7659 12.6099 11.2639C12.5117 11.7537 12.2168 12.0884 11.75 12.2516C11.2668 12.4231 10.8164 12.3169 10.4396 11.9741C10.0711 11.6312 9.72713 11.272 9.37496 10.921C8.49046 10.0231 7.61415 9.14143 6.70508 8.22715Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\nexport default SvgRejectIcon;\n","import * as React from 'react';\nimport { ControlBar } from './ControlBar';\n\nimport { ParticipantAudioTile } from '../components/participant/ParticipantAudioTile';\nimport { LayoutContextProvider } from '../components/layout/LayoutContextProvider';\nimport type { WidgetState } from '@livekit/components-core';\nimport { Chat } from './Chat';\nimport { ParticipantLoop } from '../components';\nimport { useParticipants } from '../hooks';\n\n/** @public */\nexport type AudioConferenceProps = React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * This component is the default setup of a classic LiveKit audio conferencing app.\n * It provides functionality like switching between participant grid view and focus view.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <AudioConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function AudioConference({ ...props }: AudioConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: null,\n  });\n  const participants = useParticipants();\n\n  return (\n    <LayoutContextProvider onWidgetChange={setWidgetState}>\n      <div className=\"lk-audio-conference\" {...props}>\n        <div className=\"lk-audio-conference-stage\">\n          <ParticipantLoop participants={participants}>\n            <ParticipantAudioTile />\n          </ParticipantLoop>\n        </div>\n        <ControlBar\n          controls={{ microphone: true, screenShare: false, camera: false, chat: true }}\n          waitingRoomCount={0}\n        />\n        {widgetState.showChat == 'show_chat' && <Chat />}\n      </div>\n    </LayoutContextProvider>\n  );\n}\n"],"mappings":"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","names":["React","mergeProps","React","React","React","React","mergeProps","React","React","React","mergeProps","React","mergeProps","ConnectionState","React","mergeProps","ConnectionState","React","React","React","React","React","React","React","React","React","React","React","React","React","mergeProps","React","mergeProps","React","roomAudioPlaybackAllowedObservable","mergeProps","React","React","React","React","React","React","_a","React","React","Track","React","ConnectionQuality","ConnectionQuality","mergeProps","React","mergeProps","React","_a","mergeProps","React","React","React","query","React","React","React","React","React","React","log","Track","React","publication","log","mergeProps","Track","React","log","React","React","participantPermissionObserver","participantPermissionObserver","React","React","React","React","log","React","log","log","Track","React","Track","trackReferences","participants","log","React","React","React","React","log","log","React","mergeProps","Track","_a","_b","mergeProps","React","isTrackReference","React","isTrackReference","React","React","mergeProps","React","log","React","log","log","ConnectionState","React","log","mergeProps","ConnectionState","RemoteAudioTrack","Track","React","Track","RemoteAudioTrack","React","isLocal","Track","React","Track","isLocal","React","ConnectionState","React","mergeProps","ConnectionState","React","Track","Track","React","React","_a","_b","_a","Track","React","React","log","kind","log","log","React","deviceId","kind","log","_a","_b","_c","_d","Track","React","Track","React","React","mergeProps","React","React","_a","_b","_c","_d","_e","_f","Track","isTrackReference","log","React","_a","React","React","Track","Track","React","React","React","_a","RoomEvent","Track","_a","_b","Track","RoomEvent","log","isTrackReference","React"]}